-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity my_video_filter is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    src_TVALID : IN STD_LOGIC;
    src_TREADY : OUT STD_LOGIC;
    src_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dest_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    dest_TVALID : OUT STD_LOGIC;
    dest_TREADY : IN STD_LOGIC;
    dest_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    dest_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    dest_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dest_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dest_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dest_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of my_video_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "my_video_filter,hls_ip_2015_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.510000,HLS_SYN_LAT=6220809,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=1,HLS_SYN_FF=990,HLS_SYN_LUT=1001}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_pp0_stg1_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_pp0_stg2_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st11_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv14_780 : STD_LOGIC_VECTOR (13 downto 0) := "00011110000000";
    constant ap_const_lv14_F00 : STD_LOGIC_VECTOR (13 downto 0) := "00111100000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_24 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal width : STD_LOGIC_VECTOR (15 downto 0);
    signal height : STD_LOGIC_VECTOR (15 downto 0);
    signal my_video_filter_AXILiteS_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal indvar_flatten_reg_373 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_reg_384 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_assign_reg_395 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_429 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_100 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond_flatten_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_110 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1562 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_dest_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_pp0_stg2_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_132 : BOOLEAN;
    signal ap_sig_bdd_137 : BOOLEAN;
    signal height_read_reg_1361 : STD_LOGIC_VECTOR (15 downto 0);
    signal width_read_reg_1366 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_cast_fu_434_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_cast_reg_1372 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1_cast_fu_438_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1_cast_reg_1377 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_7_fu_442_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_163 : BOOLEAN;
    signal tmp_9_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_454_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_s_reg_1499 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_4_fu_459_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_4_reg_1504 : STD_LOGIC_VECTOR (16 downto 0);
    signal bound_fu_1355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_reg_1509 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_0_1_0_1_load_reg_1514 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_1_1_load_reg_1519 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_2_1_load_reg_1524 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_0_1_load_reg_1529 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_1_1_load_reg_1534 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_2_1_load_reg_1539 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_0_1_load_reg_1544 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_1_1_load_reg_1550 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_2_1_load_reg_1556 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_511_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_next_reg_1566 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_mid2_fu_581_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_mid2_reg_1571 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_1576 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_608_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_reg_1581 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_31_cast_fu_618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_cast_reg_1586 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffers_val_1_addr_reg_1591 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_1_addr_1_reg_1596 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_2_addr_reg_1602 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_2_addr_1_reg_1607 : STD_LOGIC_VECTOR (12 downto 0);
    signal val_assign_2_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_assign_2_reg_1613 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_val_assign_2_reg_1613_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_val_assign_2_reg_1613_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_fu_635_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_reg_1618 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_cast5_fu_646_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_cast5_reg_1623 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_pp0_stg1_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_230 : BOOLEAN;
    signal line_buffers_val_1_addr_2_reg_1628 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_2_addr_2_reg_1633 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_2_0_reg_1638 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_705_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_14_reg_1643 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_fu_727_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_22_reg_1648 : STD_LOGIC_VECTOR (9 downto 0);
    signal window_val_2_2_1_reg_1653 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffers_val_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_2_1_reg_1661 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffers_val_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_2_1_reg_1667 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_2_load_reg_1673 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_2_load_reg_1678 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_848_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_24_reg_1683 : STD_LOGIC_VECTOR (11 downto 0);
    signal dx_1_fu_922_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal dx_1_reg_1688 : STD_LOGIC_VECTOR (10 downto 0);
    signal dy_1_fu_984_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal dy_1_reg_1695 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_38_2_fu_1043_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_38_2_reg_1702 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_46_2_fu_1065_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_46_2_reg_1707 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_fu_1134_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_26_reg_1712 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp2_fu_1255_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp2_reg_1717 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp4_fu_1261_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp4_reg_1722 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_30_fu_1324_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_reg_1727 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1732 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1_fu_1348_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_1_reg_1737 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffers_val_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_0_ce0 : STD_LOGIC;
    signal line_buffers_val_0_we0 : STD_LOGIC;
    signal line_buffers_val_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffers_val_0_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_0_ce1 : STD_LOGIC;
    signal line_buffers_val_0_we1 : STD_LOGIC;
    signal line_buffers_val_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffers_val_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_1_ce0 : STD_LOGIC;
    signal line_buffers_val_1_we0 : STD_LOGIC;
    signal line_buffers_val_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffers_val_1_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_1_ce1 : STD_LOGIC;
    signal line_buffers_val_1_we1 : STD_LOGIC;
    signal line_buffers_val_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffers_val_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_2_ce0 : STD_LOGIC;
    signal line_buffers_val_2_we0 : STD_LOGIC;
    signal line_buffers_val_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffers_val_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffers_val_2_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal line_buffers_val_2_ce1 : STD_LOGIC;
    signal line_buffers_val_2_we1 : STD_LOGIC;
    signal line_buffers_val_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_362 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_phi_fu_377_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_phi_fu_388_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_assign_phi_fu_399_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_val_0_1_0_1_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_1_1_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_2_1_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_0_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_1_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_0_1_2_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_0_1_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_1_1_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_2_1_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_0_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_1_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_1_1_2_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_0_1_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_1_1_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_2_1_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_0_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_1_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_val_2_1_2_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ioackin_dest_TREADY : STD_LOGIC := '0';
    signal exitcond_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_1_fu_562_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_cast_fu_589_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal col_assign_mid2_fu_573_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_612_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal col_assign_cast_fu_598_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_641_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_10_fu_659_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_670_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_20_cast_fu_655_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_cast_fu_652_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_fu_689_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_27_cast_fu_695_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_cast_fu_666_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_24_cast_fu_678_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_fu_699_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_20_fu_711_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_35_cast_fu_717_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_cast1_fu_682_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_21_fu_721_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_cast_fu_685_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_cast_fu_743_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_fu_750_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_26_cast9_fu_746_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_fu_761_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_fu_773_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_cast_fu_769_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_cast_fu_785_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_fu_788_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_cast_fu_781_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal dy_fu_794_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal abscond_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_fu_800_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal abs_fu_812_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal dx_fu_755_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal abscond1_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg1_fu_824_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal abs1_fu_836_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal abs1_cast_fu_844_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal abs_cast_fu_820_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_1_fu_860_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_33_1_fu_871_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_1_cast_fu_857_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_1_cast_fu_854_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_36_1_fu_894_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_36_1_cast_fu_900_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_1_cast_fu_867_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_33_1_cast_fu_878_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_1_fu_904_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_38_1_fu_910_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_1_cast_fu_885_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_39_1_fu_916_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_1_cast7_fu_888_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_1_fu_928_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_43_1_fu_940_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_44_1_fu_952_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_44_1_cast_fu_958_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_34_1_cast8_fu_882_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_45_1_fu_962_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_35_1_cast_fu_891_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_46_1_fu_968_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_41_1_cast_fu_936_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_46_1_cast_fu_974_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_47_1_fu_978_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_43_1_cast_fu_948_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_2_fu_997_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_33_2_fu_1008_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_2_cast_fu_993_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_2_cast_fu_990_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_36_2_fu_1027_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_36_2_cast_fu_1033_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_2_cast_fu_1004_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_33_2_cast_fu_1016_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_2_fu_1037_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_44_2_fu_1049_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_44_2_cast_fu_1055_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_34_2_cast6_fu_1020_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_45_2_fu_1059_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_35_2_cast_fu_1023_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal abscond_1_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_1_fu_1103_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_fu_1113_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal abscond1_1_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg1_1_fu_1124_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_2_cast_fu_1141_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_39_2_fu_1148_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_2_cast5_fu_1144_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_2_fu_1159_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_43_2_fu_1170_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_2_cast_fu_1166_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_46_2_cast_fu_1181_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_47_2_fu_1184_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_43_2_cast_fu_1177_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal dy_2_fu_1190_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal abscond_2_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_2_fu_1196_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal abs_2_fu_1208_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal dx_2_fu_1153_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal abscond1_2_fu_1226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg1_2_fu_1220_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal abs1_2_fu_1232_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_fu_1244_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal abs1_2_cast_fu_1240_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal abs_2_cast_fu_1216_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_cast_fu_1251_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal abs_1_cast_cast_fu_1120_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal abs1_1_cast_cast_fu_1267_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp3_fu_1273_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp2_cast_cast_fu_1270_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_15_fu_1278_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_neg_fu_1292_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_27_fu_1298_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_1284_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1308_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_1314_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_1332_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal bound_fu_1355_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_fu_1355_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_1030 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal bound_fu_1355_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_1355_p10 : STD_LOGIC_VECTOR (31 downto 0);

    component my_video_filter_mul_mul_16ns_16ns_32_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component my_video_filter_line_buffers_val_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component my_video_filter_line_buffers_val_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component my_video_filter_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        width : OUT STD_LOGIC_VECTOR (15 downto 0);
        height : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    my_video_filter_AXILiteS_s_axi_U : component my_video_filter_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => my_video_filter_AXILiteS_s_axi_U_ap_dummy_ce,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        width => width,
        height => height);

    line_buffers_val_0_U : component my_video_filter_line_buffers_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 5760,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffers_val_0_address0,
        ce0 => line_buffers_val_0_ce0,
        we0 => line_buffers_val_0_we0,
        d0 => line_buffers_val_0_d0,
        address1 => line_buffers_val_0_address1,
        ce1 => line_buffers_val_0_ce1,
        we1 => line_buffers_val_0_we1,
        d1 => line_buffers_val_0_d1);

    line_buffers_val_1_U : component my_video_filter_line_buffers_val_1
    generic map (
        DataWidth => 8,
        AddressRange => 5760,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffers_val_1_address0,
        ce0 => line_buffers_val_1_ce0,
        we0 => line_buffers_val_1_we0,
        d0 => line_buffers_val_1_d0,
        q0 => line_buffers_val_1_q0,
        address1 => line_buffers_val_1_address1,
        ce1 => line_buffers_val_1_ce1,
        we1 => line_buffers_val_1_we1,
        d1 => line_buffers_val_1_d1,
        q1 => line_buffers_val_1_q1);

    line_buffers_val_2_U : component my_video_filter_line_buffers_val_1
    generic map (
        DataWidth => 8,
        AddressRange => 5760,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffers_val_2_address0,
        ce0 => line_buffers_val_2_ce0,
        we0 => line_buffers_val_2_we0,
        d0 => line_buffers_val_2_d0,
        q0 => line_buffers_val_2_q0,
        address1 => line_buffers_val_2_address1,
        ce1 => line_buffers_val_2_ce1,
        we1 => line_buffers_val_2_we1,
        d1 => line_buffers_val_2_d1,
        q1 => line_buffers_val_2_q1);

    my_video_filter_mul_mul_16ns_16ns_32_1_U1 : component my_video_filter_mul_mul_16ns_16ns_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => bound_fu_1355_p0,
        din1 => bound_fu_1355_p1,
        dout => bound_fu_1355_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_dest_TREADY assign process. --
    ap_reg_ioackin_dest_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_dest_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
                    ap_reg_ioackin_dest_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = dest_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110)) and (ap_const_logic_1 = dest_TREADY)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = dest_TREADY)))) then 
                    ap_reg_ioackin_dest_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not((exitcond_flatten_fu_506_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_9_fu_448_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_9_fu_448_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY)))) and not((ap_const_lv1_0 = exitcond_flatten_reg_1562))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY)))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_9_fu_448_p2)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- col_assign_reg_395 assign process. --
    col_assign_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and (ap_const_lv1_0 = exitcond_flatten_reg_1562))) then 
                col_assign_reg_395 <= col_reg_1618;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_9_fu_448_p2)))) then 
                col_assign_reg_395 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten_reg_373 assign process. --
    indvar_flatten_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and (ap_const_lv1_0 = exitcond_flatten_reg_1562))) then 
                indvar_flatten_reg_373 <= indvar_flatten_next_reg_1566;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_9_fu_448_p2)))) then 
                indvar_flatten_reg_373 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- row_reg_384 assign process. --
    row_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and (ap_const_lv1_0 = exitcond_flatten_reg_1562))) then 
                row_reg_384 <= row_mid2_reg_1571;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_9_fu_448_p2)))) then 
                row_reg_384 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    -- tmp_6_reg_362 assign process. --
    tmp_6_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                tmp_6_reg_362 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = tmp_9_fu_448_p2))) then 
                tmp_6_reg_362 <= tmp_7_fu_442_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then
                ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 <= exitcond_flatten_reg_1562;
                ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 <= ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1;
                ap_reg_ppstg_val_assign_2_reg_1613_pp0_it1 <= val_assign_2_reg_1613;
                ap_reg_ppstg_val_assign_2_reg_1613_pp0_it2 <= ap_reg_ppstg_val_assign_2_reg_1613_pp0_it1;
                exitcond_flatten_reg_1562 <= exitcond_flatten_fu_506_p2;
                window_val_0_1_0_1_load_reg_1514 <= window_val_0_1_0_1_fu_140;
                window_val_0_1_1_1_load_reg_1519 <= window_val_0_1_1_1_fu_144;
                window_val_0_1_2_1_load_reg_1524 <= window_val_0_1_2_1_fu_148;
                window_val_1_1_0_1_load_reg_1529 <= window_val_1_1_0_1_fu_164;
                window_val_1_1_1_1_load_reg_1534 <= window_val_1_1_1_1_fu_168;
                window_val_1_1_2_1_load_reg_1539 <= window_val_1_1_2_1_fu_172;
                window_val_2_1_0_1_load_reg_1544 <= window_val_2_1_0_1_fu_188;
                window_val_2_1_1_1_load_reg_1550 <= window_val_2_1_1_1_fu_192;
                window_val_2_1_2_1_load_reg_1556 <= window_val_2_1_2_1_fu_196;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_9_fu_448_p2)))) then
                bound_reg_1509 <= bound_fu_1355_p2;
                tmp_4_reg_1504 <= tmp_4_fu_459_p2;
                tmp_s_reg_1499 <= tmp_s_fu_454_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then
                col_reg_1618 <= col_fu_635_p2;
                row_mid2_reg_1571 <= row_mid2_fu_581_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY)))))) then
                dx_1_reg_1688 <= dx_1_fu_922_p2;
                dy_1_reg_1695 <= dy_1_fu_984_p2;
                tmp_24_reg_1683 <= tmp_24_fu_848_p2;
                tmp_38_2_reg_1702 <= tmp_38_2_fu_1043_p2;
                tmp_46_2_reg_1707 <= tmp_46_2_fu_1065_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                height_read_reg_1361 <= height;
                    tmp_1_cast_reg_1377(15 downto 0) <= tmp_1_cast_fu_438_p1(15 downto 0);
                    tmp_cast_reg_1372(15 downto 0) <= tmp_cast_fu_434_p1(15 downto 0);
                width_read_reg_1366 <= width;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) then
                icmp_reg_1732 <= icmp_fu_1342_p2;
                tmp_30_reg_1727 <= tmp_30_fu_1324_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then
                indvar_flatten_next_reg_1566 <= indvar_flatten_next_fu_511_p2;
                window_val_0_1_0_1_fu_140 <= window_val_0_1_0_fu_152;
                window_val_0_1_1_1_fu_144 <= window_val_0_1_1_fu_156;
                window_val_0_1_2_1_fu_148 <= window_val_0_1_2_fu_160;
                window_val_1_1_0_1_fu_164 <= window_val_1_1_0_fu_176;
                window_val_1_1_1_1_fu_168 <= window_val_1_1_1_fu_180;
                window_val_1_1_2_1_fu_172 <= window_val_1_1_2_fu_184;
                window_val_2_1_0_1_fu_188 <= window_val_2_1_0_fu_200;
                window_val_2_1_1_1_fu_192 <= window_val_2_1_1_fu_204;
                window_val_2_1_2_1_fu_196 <= window_val_2_1_2_fu_208;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then
                line_buffers_val_1_addr_1_reg_1596 <= tmp_31_cast_fu_618_p1(13 - 1 downto 0);
                line_buffers_val_1_addr_reg_1591 <= tmp_3_fu_602_p1(13 - 1 downto 0);
                line_buffers_val_2_addr_1_reg_1607 <= tmp_31_cast_fu_618_p1(13 - 1 downto 0);
                line_buffers_val_2_addr_reg_1602 <= tmp_3_fu_602_p1(13 - 1 downto 0);
                tmp_31_cast_reg_1586 <= tmp_31_cast_fu_618_p1;
                    tmp_3_reg_1576(15 downto 0) <= tmp_3_fu_602_p1(15 downto 0);
                tmp_reg_1581 <= tmp_fu_608_p1;
                val_assign_2_reg_1613 <= val_assign_2_fu_629_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_reg_1562) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) then
                line_buffers_val_1_addr_2_reg_1628 <= tmp_32_cast5_fu_646_p1(13 - 1 downto 0);
                line_buffers_val_2_addr_2_reg_1633 <= tmp_32_cast5_fu_646_p1(13 - 1 downto 0);
                tmp_14_reg_1643 <= tmp_14_fu_705_p2;
                tmp_22_reg_1648 <= tmp_22_fu_727_p2;
                tmp_32_cast5_reg_1623 <= tmp_32_cast5_fu_646_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY)))))) then
                p_1_reg_1737 <= p_1_fu_1348_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))))) then
                reg_429 <= src_TDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and (ap_const_lv1_0 = exitcond_flatten_reg_1562))) then
                tmp2_reg_1717 <= tmp2_fu_1255_p2;
                tmp4_reg_1722 <= tmp4_fu_1261_p2;
                tmp_26_reg_1712 <= tmp_26_fu_1134_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY)))))) then
                window_val_0_1_0_fu_152 <= window_val_0_2_0_reg_1638;
                window_val_0_1_1_fu_156 <= window_val_0_2_1_reg_1661;
                window_val_0_1_2_fu_160 <= line_buffers_val_1_q1;
                window_val_0_1_2_load_reg_1673 <= window_val_0_1_2_fu_160;
                window_val_1_1_2_fu_184 <= line_buffers_val_2_q1;
                window_val_2_1_0_fu_200 <= reg_429;
                window_val_2_1_1_fu_204 <= window_val_2_2_1_reg_1653;
                window_val_2_1_2_fu_208 <= src_TDATA;
                window_val_2_1_2_load_reg_1678 <= window_val_2_1_2_fu_208;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) then
                window_val_0_2_0_reg_1638 <= line_buffers_val_1_q0;
                window_val_0_2_1_reg_1661 <= line_buffers_val_1_q1;
                window_val_1_1_0_fu_176 <= line_buffers_val_2_q0;
                window_val_1_1_1_fu_180 <= line_buffers_val_2_q1;
                window_val_1_2_1_reg_1667 <= line_buffers_val_2_q1;
                window_val_2_2_1_reg_1653 <= src_TDATA;
            end if;
        end if;
    end process;
    tmp_cast_reg_1372(16) <= '0';
    tmp_1_cast_reg_1377(16) <= '0';
    tmp_3_reg_1576(63 downto 16) <= "000000000000000000000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, exitcond_flatten_fu_506_p2, ap_sig_bdd_110, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_bdd_137, tmp_9_fu_448_p2, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = tmp_9_fu_448_p2))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not((exitcond_flatten_fu_506_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_3;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not((exitcond_flatten_fu_506_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg1_fsm_3 => 
                if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_4;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_3;
                end if;
            when ap_ST_pp0_stg2_fsm_4 => 
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_4;
                end if;
            when ap_ST_st11_fsm_5 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
        abs1_1_cast_cast_fu_1267_p1 <= std_logic_vector(resize(signed(tmp_26_reg_1712),14));

        abs1_2_cast_fu_1240_p1 <= std_logic_vector(resize(signed(abs1_2_fu_1232_p3),12));

    abs1_2_fu_1232_p3 <= 
        dx_2_fu_1153_p2 when (abscond1_2_fu_1226_p2(0) = '1') else 
        neg1_2_fu_1220_p2;
        abs1_cast_fu_844_p1 <= std_logic_vector(resize(signed(abs1_fu_836_p3),12));

    abs1_fu_836_p3 <= 
        dx_fu_755_p2 when (abscond1_fu_830_p2(0) = '1') else 
        neg1_fu_824_p2;
        abs_1_cast_cast_fu_1120_p1 <= std_logic_vector(resize(signed(tmp_25_fu_1113_p3),14));

        abs_2_cast_fu_1216_p1 <= std_logic_vector(resize(signed(abs_2_fu_1208_p3),12));

    abs_2_fu_1208_p3 <= 
        dy_2_fu_1190_p2 when (abscond_2_fu_1202_p2(0) = '1') else 
        neg_2_fu_1196_p2;
        abs_cast_fu_820_p1 <= std_logic_vector(resize(signed(abs_fu_812_p3),12));

    abs_fu_812_p3 <= 
        dy_fu_794_p2 when (abscond_fu_806_p2(0) = '1') else 
        neg_fu_800_p2;
    abscond1_1_fu_1129_p2 <= "1" when (signed(dx_1_reg_1688) > signed(ap_const_lv11_0)) else "0";
    abscond1_2_fu_1226_p2 <= "1" when (signed(dx_2_fu_1153_p2) > signed(ap_const_lv11_0)) else "0";
    abscond1_fu_830_p2 <= "1" when (signed(dx_fu_755_p2) > signed(ap_const_lv11_0)) else "0";
    abscond_1_fu_1108_p2 <= "1" when (signed(dy_1_reg_1695) > signed(ap_const_lv11_0)) else "0";
    abscond_2_fu_1202_p2 <= "1" when (signed(dy_2_fu_1190_p2) > signed(ap_const_lv11_0)) else "0";
    abscond_fu_806_p2 <= "1" when (signed(dy_fu_794_p2) > signed(ap_const_lv11_0)) else "0";

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_sig_cseq_ST_st11_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st11_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_100 assign process. --
    ap_sig_bdd_100_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_100 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_1030 assign process. --
    ap_sig_bdd_1030_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1030 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_110 assign process. --
    ap_sig_bdd_110_assign_proc : process(src_TVALID, exitcond_flatten_fu_506_p2)
    begin
                ap_sig_bdd_110 <= ((src_TVALID = ap_const_logic_0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_132 assign process. --
    ap_sig_bdd_132_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_132 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_137 assign process. --
    ap_sig_bdd_137_assign_proc : process(src_TVALID, exitcond_flatten_reg_1562)
    begin
                ap_sig_bdd_137 <= ((src_TVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond_flatten_reg_1562));
    end process;


    -- ap_sig_bdd_163 assign process. --
    ap_sig_bdd_163_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_163 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_230 assign process. --
    ap_sig_bdd_230_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_230 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_24 assign process. --
    ap_sig_bdd_24_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_24 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_100)
    begin
        if (ap_sig_bdd_100) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg1_fsm_3 assign process. --
    ap_sig_cseq_ST_pp0_stg1_fsm_3_assign_proc : process(ap_sig_bdd_230)
    begin
        if (ap_sig_bdd_230) then 
            ap_sig_cseq_ST_pp0_stg1_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg1_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg2_fsm_4 assign process. --
    ap_sig_cseq_ST_pp0_stg2_fsm_4_assign_proc : process(ap_sig_bdd_132)
    begin
        if (ap_sig_bdd_132) then 
            ap_sig_cseq_ST_pp0_stg2_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg2_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_5 assign process. --
    ap_sig_cseq_ST_st11_fsm_5_assign_proc : process(ap_sig_bdd_1030)
    begin
        if (ap_sig_bdd_1030) then 
            ap_sig_cseq_ST_st11_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_24)
    begin
        if (ap_sig_bdd_24) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_163)
    begin
        if (ap_sig_bdd_163) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_dest_TREADY assign process. --
    ap_sig_ioackin_dest_TREADY_assign_proc : process(dest_TREADY, ap_reg_ioackin_dest_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_dest_TREADY)) then 
            ap_sig_ioackin_dest_TREADY <= dest_TREADY;
        else 
            ap_sig_ioackin_dest_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    bound_fu_1355_p0 <= bound_fu_1355_p00(16 - 1 downto 0);
    bound_fu_1355_p00 <= std_logic_vector(resize(unsigned(width_read_reg_1366),32));
    bound_fu_1355_p1 <= bound_fu_1355_p10(16 - 1 downto 0);
    bound_fu_1355_p10 <= std_logic_vector(resize(unsigned(height_read_reg_1361),32));
    col_assign_cast_fu_598_p1 <= std_logic_vector(resize(unsigned(col_assign_mid2_fu_573_p3),17));
    col_assign_mid2_fu_573_p3 <= 
        ap_const_lv16_0 when (exitcond_fu_568_p2(0) = '1') else 
        col_assign_phi_fu_399_p4;

    -- col_assign_phi_fu_399_p4 assign process. --
    col_assign_phi_fu_399_p4_assign_proc : process(col_assign_reg_395, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_1562, col_reg_1618)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_1562))) then 
            col_assign_phi_fu_399_p4 <= col_reg_1618;
        else 
            col_assign_phi_fu_399_p4 <= col_assign_reg_395;
        end if; 
    end process;

    col_fu_635_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(col_assign_mid2_fu_573_p3));

    -- dest_TDATA assign process. --
    dest_TDATA_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_110, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3, p_1_fu_1348_p3, p_1_reg_1737)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))))) then 
            dest_TDATA <= p_1_reg_1737;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)))) then 
            dest_TDATA <= p_1_fu_1348_p3;
        else 
            dest_TDATA <= "XXXXXXXX";
        end if; 
    end process;

    dest_TDEST <= ap_const_lv1_0;
    dest_TID <= ap_const_lv1_0;
    dest_TKEEP <= ap_const_lv1_1;

    -- dest_TLAST assign process. --
    dest_TLAST_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_110, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_reg_ppstg_val_assign_2_reg_1613_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)))) then 
            dest_TLAST <= ap_reg_ppstg_val_assign_2_reg_1613_pp0_it2;
        elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110))))) then 
            dest_TLAST <= ap_const_lv1_0;
        else 
            dest_TLAST <= "X";
        end if; 
    end process;

    dest_TSTRB <= ap_const_lv1_0;
    dest_TUSER <= ap_const_lv1_0;

    -- dest_TVALID assign process. --
    dest_TVALID_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_110, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3, ap_reg_ioackin_dest_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_0 = ap_reg_ioackin_dest_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110)) and (ap_const_logic_0 = ap_reg_ioackin_dest_TREADY)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_0 = ap_reg_ioackin_dest_TREADY)))) then 
            dest_TVALID <= ap_const_logic_1;
        else 
            dest_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    dx_1_fu_922_p2 <= std_logic_vector(unsigned(tmp_39_1_fu_916_p2) + unsigned(tmp_35_1_cast7_fu_888_p1));
    dx_2_fu_1153_p2 <= std_logic_vector(unsigned(tmp_39_2_fu_1148_p2) + unsigned(tmp_35_2_cast5_fu_1144_p1));
    dx_fu_755_p2 <= std_logic_vector(unsigned(tmp_16_fu_750_p2) + unsigned(tmp_26_cast9_fu_746_p1));
    dy_1_fu_984_p2 <= std_logic_vector(unsigned(tmp_47_1_fu_978_p2) - unsigned(tmp_43_1_cast_fu_948_p1));
    dy_2_fu_1190_p2 <= std_logic_vector(unsigned(tmp_47_2_fu_1184_p2) - unsigned(tmp_43_2_cast_fu_1177_p1));
    dy_fu_794_p2 <= std_logic_vector(unsigned(tmp_23_fu_788_p2) - unsigned(tmp_34_cast_fu_781_p1));
    exitcond_flatten_fu_506_p2 <= "1" when (indvar_flatten_phi_fu_377_p4 = bound_reg_1509) else "0";
    exitcond_fu_568_p2 <= "1" when (col_assign_phi_fu_399_p4 = width_read_reg_1366) else "0";
    icmp_fu_1342_p2 <= "1" when (signed(tmp_33_fu_1332_p4) > signed(ap_const_lv4_0)) else "0";
    indvar_flatten_next_fu_511_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_377_p4) + unsigned(ap_const_lv32_1));

    -- indvar_flatten_phi_fu_377_p4 assign process. --
    indvar_flatten_phi_fu_377_p4_assign_proc : process(indvar_flatten_reg_373, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_1562, indvar_flatten_next_reg_1566)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_1562))) then 
            indvar_flatten_phi_fu_377_p4 <= indvar_flatten_next_reg_1566;
        else 
            indvar_flatten_phi_fu_377_p4 <= indvar_flatten_reg_373;
        end if; 
    end process;


    -- line_buffers_val_0_address0 assign process. --
    line_buffers_val_0_address0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, tmp_3_reg_1576, tmp_32_cast5_reg_1623, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffers_val_0_address0 <= tmp_32_cast5_reg_1623(13 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffers_val_0_address0 <= tmp_3_reg_1576(13 - 1 downto 0);
            else 
                line_buffers_val_0_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            line_buffers_val_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    line_buffers_val_0_address1 <= tmp_31_cast_reg_1586(13 - 1 downto 0);

    -- line_buffers_val_0_ce0 assign process. --
    line_buffers_val_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            line_buffers_val_0_ce0 <= ap_const_logic_1;
        else 
            line_buffers_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_0_ce1 assign process. --
    line_buffers_val_0_ce1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) then 
            line_buffers_val_0_ce1 <= ap_const_logic_1;
        else 
            line_buffers_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_0_d0 assign process. --
    line_buffers_val_0_d0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg1_fsm_3, line_buffers_val_1_q0, line_buffers_val_1_q1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffers_val_0_d0 <= line_buffers_val_1_q1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffers_val_0_d0 <= line_buffers_val_1_q0;
            else 
                line_buffers_val_0_d0 <= "XXXXXXXX";
            end if;
        else 
            line_buffers_val_0_d0 <= "XXXXXXXX";
        end if; 
    end process;

    line_buffers_val_0_d1 <= line_buffers_val_1_q1;

    -- line_buffers_val_0_we0 assign process. --
    line_buffers_val_0_we0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_1562, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            line_buffers_val_0_we0 <= ap_const_logic_1;
        else 
            line_buffers_val_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_0_we1 assign process. --
    line_buffers_val_0_we1_assign_proc : process(ap_reg_ppiten_pp0_it0, exitcond_flatten_reg_1562, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            line_buffers_val_0_we1 <= ap_const_logic_1;
        else 
            line_buffers_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_1_address0 assign process. --
    line_buffers_val_1_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, tmp_3_fu_602_p1, line_buffers_val_1_addr_reg_1591, line_buffers_val_1_addr_1_reg_1596, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffers_val_1_address0 <= line_buffers_val_1_addr_1_reg_1596;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffers_val_1_address0 <= line_buffers_val_1_addr_reg_1591;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2)) then 
                line_buffers_val_1_address0 <= tmp_3_fu_602_p1(13 - 1 downto 0);
            else 
                line_buffers_val_1_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            line_buffers_val_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    -- line_buffers_val_1_address1 assign process. --
    line_buffers_val_1_address1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, tmp_31_cast_fu_618_p1, tmp_32_cast5_fu_646_p1, ap_sig_cseq_ST_pp0_stg1_fsm_3, line_buffers_val_1_addr_2_reg_1628)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffers_val_1_address1 <= line_buffers_val_1_addr_2_reg_1628;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffers_val_1_address1 <= tmp_32_cast5_fu_646_p1(13 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2)) then 
                line_buffers_val_1_address1 <= tmp_31_cast_fu_618_p1(13 - 1 downto 0);
            else 
                line_buffers_val_1_address1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            line_buffers_val_1_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    -- line_buffers_val_1_ce0 assign process. --
    line_buffers_val_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_110, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            line_buffers_val_1_ce0 <= ap_const_logic_1;
        else 
            line_buffers_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_1_ce1 assign process. --
    line_buffers_val_1_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_110, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            line_buffers_val_1_ce1 <= ap_const_logic_1;
        else 
            line_buffers_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_1_d0 assign process. --
    line_buffers_val_1_d0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg1_fsm_3, window_val_1_2_1_reg_1667, line_buffers_val_2_q0)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffers_val_1_d0 <= window_val_1_2_1_reg_1667;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffers_val_1_d0 <= line_buffers_val_2_q0;
            else 
                line_buffers_val_1_d0 <= "XXXXXXXX";
            end if;
        else 
            line_buffers_val_1_d0 <= "XXXXXXXX";
        end if; 
    end process;

    line_buffers_val_1_d1 <= line_buffers_val_2_q1;

    -- line_buffers_val_1_we0 assign process. --
    line_buffers_val_1_we0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_1562, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            line_buffers_val_1_we0 <= ap_const_logic_1;
        else 
            line_buffers_val_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_1_we1 assign process. --
    line_buffers_val_1_we1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_1562, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))))) then 
            line_buffers_val_1_we1 <= ap_const_logic_1;
        else 
            line_buffers_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_2_address0 assign process. --
    line_buffers_val_2_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, tmp_3_fu_602_p1, line_buffers_val_2_addr_reg_1602, line_buffers_val_2_addr_1_reg_1607, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffers_val_2_address0 <= line_buffers_val_2_addr_1_reg_1607;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffers_val_2_address0 <= line_buffers_val_2_addr_reg_1602;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2)) then 
                line_buffers_val_2_address0 <= tmp_3_fu_602_p1(13 - 1 downto 0);
            else 
                line_buffers_val_2_address0 <= "XXXXXXXXXXXXX";
            end if;
        else 
            line_buffers_val_2_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    -- line_buffers_val_2_address1 assign process. --
    line_buffers_val_2_address1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, tmp_31_cast_fu_618_p1, tmp_32_cast5_fu_646_p1, ap_sig_cseq_ST_pp0_stg1_fsm_3, line_buffers_val_2_addr_2_reg_1633)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffers_val_2_address1 <= line_buffers_val_2_addr_2_reg_1633;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffers_val_2_address1 <= tmp_32_cast5_fu_646_p1(13 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2)) then 
                line_buffers_val_2_address1 <= tmp_31_cast_fu_618_p1(13 - 1 downto 0);
            else 
                line_buffers_val_2_address1 <= "XXXXXXXXXXXXX";
            end if;
        else 
            line_buffers_val_2_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    -- line_buffers_val_2_ce0 assign process. --
    line_buffers_val_2_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_110, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            line_buffers_val_2_ce0 <= ap_const_logic_1;
        else 
            line_buffers_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_2_ce1 assign process. --
    line_buffers_val_2_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_110, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            line_buffers_val_2_ce1 <= ap_const_logic_1;
        else 
            line_buffers_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_2_d0 assign process. --
    line_buffers_val_2_d0_assign_proc : process(reg_429, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_cseq_ST_pp0_stg1_fsm_3, window_val_2_2_1_reg_1653)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4)) then 
                line_buffers_val_2_d0 <= window_val_2_2_1_reg_1653;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3)) then 
                line_buffers_val_2_d0 <= reg_429;
            else 
                line_buffers_val_2_d0 <= "XXXXXXXX";
            end if;
        else 
            line_buffers_val_2_d0 <= "XXXXXXXX";
        end if; 
    end process;

    line_buffers_val_2_d1 <= src_TDATA;

    -- line_buffers_val_2_we0 assign process. --
    line_buffers_val_2_we0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_1562, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            line_buffers_val_2_we0 <= ap_const_logic_1;
        else 
            line_buffers_val_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffers_val_2_we1 assign process. --
    line_buffers_val_2_we1_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_1562, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))))) then 
            line_buffers_val_2_we1 <= ap_const_logic_1;
        else 
            line_buffers_val_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    my_video_filter_AXILiteS_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    neg1_1_fu_1124_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(dx_1_reg_1688));
    neg1_2_fu_1220_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(dx_2_fu_1153_p2));
    neg1_fu_824_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(dx_fu_755_p2));
    neg_1_fu_1103_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(dy_1_reg_1695));
    neg_2_fu_1196_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(dy_2_fu_1190_p2));
    neg_fu_800_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(dy_fu_794_p2));
    p_1_fu_1348_p3 <= 
        ap_const_lv8_FF when (icmp_reg_1732(0) = '1') else 
        tmp_30_reg_1727;
    p_neg_fu_1292_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(tmp_15_fu_1278_p2));
    row_1_fu_562_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(row_phi_fu_388_p4));
    row_cast_fu_589_p1 <= std_logic_vector(resize(unsigned(row_mid2_fu_581_p3),17));
    row_mid2_fu_581_p3 <= 
        row_1_fu_562_p2 when (exitcond_fu_568_p2(0) = '1') else 
        row_phi_fu_388_p4;

    -- row_phi_fu_388_p4 assign process. --
    row_phi_fu_388_p4_assign_proc : process(row_reg_384, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_1562, row_mid2_reg_1571)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_1562))) then 
            row_phi_fu_388_p4 <= row_mid2_reg_1571;
        else 
            row_phi_fu_388_p4 <= row_reg_384;
        end if; 
    end process;


    -- src_TREADY assign process. --
    src_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, exitcond_flatten_fu_506_p2, ap_sig_bdd_110, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_1562, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1, ap_sig_ioackin_dest_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_4, ap_sig_bdd_137, ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2, ap_sig_cseq_ST_pp0_stg1_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_506_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_110) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_dest_TREADY))))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_1562) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137) or ((ap_const_logic_0 = ap_sig_ioackin_dest_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))))) then 
            src_TREADY <= ap_const_logic_1;
        else 
            src_TREADY <= ap_const_logic_0;
        end if; 
    end process;

        tmp2_cast_cast_fu_1270_p1 <= std_logic_vector(resize(signed(tmp2_reg_1717),14));

    tmp2_fu_1255_p2 <= std_logic_vector(signed(abs1_2_cast_fu_1240_p1) + signed(abs_2_cast_fu_1216_p1));
    tmp3_fu_1273_p2 <= std_logic_vector(unsigned(tmp4_reg_1722) + unsigned(abs1_1_cast_cast_fu_1267_p1));
    tmp4_fu_1261_p2 <= std_logic_vector(signed(tmp_13_cast_fu_1251_p1) + signed(abs_1_cast_cast_fu_1120_p1));
    tmp_10_fu_659_p3 <= (window_val_1_1_0_1_load_reg_1529 & ap_const_lv1_0);
    tmp_11_fu_670_p3 <= (line_buffers_val_2_q0 & ap_const_lv1_0);
    tmp_12_fu_689_p2 <= std_logic_vector(unsigned(tmp_20_cast_fu_655_p1) - unsigned(tmp_19_cast_fu_652_p1));
        tmp_13_cast_fu_1251_p1 <= std_logic_vector(resize(signed(tmp_31_fu_1244_p3),14));

    tmp_13_fu_699_p2 <= std_logic_vector(signed(tmp_27_cast_fu_695_p1) - signed(tmp_22_cast_fu_666_p1));
    tmp_14_fu_705_p2 <= std_logic_vector(unsigned(tmp_24_cast_fu_678_p1) + unsigned(tmp_13_fu_699_p2));
    tmp_15_fu_1278_p2 <= std_logic_vector(unsigned(tmp3_fu_1273_p2) + unsigned(tmp2_cast_cast_fu_1270_p1));
    tmp_16_fu_750_p2 <= std_logic_vector(unsigned(tmp_14_reg_1643) - unsigned(tmp_25_cast_fu_743_p1));
    tmp_17_fu_761_p3 <= (window_val_0_1_0_fu_152 & ap_const_lv1_0);
    tmp_18_fu_624_p2 <= "1" when (col_assign_cast_fu_598_p1 = tmp_4_reg_1504) else "0";
    tmp_19_cast_fu_652_p1 <= std_logic_vector(resize(unsigned(window_val_0_1_0_1_load_reg_1514),9));
    tmp_19_fu_773_p3 <= (window_val_2_1_0_fu_200 & ap_const_lv1_0);
    tmp_1_cast_fu_438_p1 <= std_logic_vector(resize(unsigned(width),17));
    tmp_1_fu_593_p2 <= "1" when (row_cast_fu_589_p1 = tmp_s_reg_1499) else "0";
    tmp_20_cast_fu_655_p1 <= std_logic_vector(resize(unsigned(line_buffers_val_1_q0),9));
    tmp_20_fu_711_p2 <= std_logic_vector(unsigned(tmp_19_cast_fu_652_p1) + unsigned(tmp_20_cast_fu_655_p1));
    tmp_21_fu_721_p2 <= std_logic_vector(unsigned(tmp_35_cast_fu_717_p1) - unsigned(tmp_25_cast1_fu_682_p1));
    tmp_22_cast_fu_666_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_659_p3),11));
    tmp_22_fu_727_p2 <= std_logic_vector(unsigned(tmp_21_fu_721_p2) - unsigned(tmp_26_cast_fu_685_p1));
    tmp_23_fu_788_p2 <= std_logic_vector(unsigned(tmp_32_cast_fu_769_p1) + unsigned(tmp_37_cast_fu_785_p1));
    tmp_24_cast_fu_678_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_670_p3),11));
    tmp_24_fu_848_p2 <= std_logic_vector(signed(abs1_cast_fu_844_p1) + signed(abs_cast_fu_820_p1));
    tmp_25_cast1_fu_682_p1 <= std_logic_vector(resize(unsigned(window_val_2_1_0_1_load_reg_1544),10));
    tmp_25_cast_fu_743_p1 <= std_logic_vector(resize(unsigned(window_val_2_1_0_1_load_reg_1544),11));
    tmp_25_fu_1113_p3 <= 
        dy_1_reg_1695 when (abscond_1_fu_1108_p2(0) = '1') else 
        neg_1_fu_1103_p2;
    tmp_26_cast9_fu_746_p1 <= std_logic_vector(resize(unsigned(reg_429),11));
    tmp_26_cast_fu_685_p1 <= std_logic_vector(resize(unsigned(reg_429),10));
    tmp_26_fu_1134_p3 <= 
        dx_1_reg_1688 when (abscond1_1_fu_1129_p2(0) = '1') else 
        neg1_1_fu_1124_p2;
        tmp_27_cast_fu_695_p1 <= std_logic_vector(resize(signed(tmp_12_fu_689_p2),11));

    tmp_27_fu_1298_p4 <= p_neg_fu_1292_p2(9 downto 2);
    tmp_28_1_cast_fu_854_p1 <= std_logic_vector(resize(unsigned(window_val_0_1_1_1_load_reg_1519),9));
    tmp_28_2_cast_fu_990_p1 <= std_logic_vector(resize(unsigned(window_val_0_1_2_1_load_reg_1524),9));
    tmp_28_fu_1308_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_27_fu_1298_p4));
    tmp_29_1_cast_fu_857_p1 <= std_logic_vector(resize(unsigned(window_val_0_2_1_reg_1661),9));
    tmp_29_2_cast_fu_993_p1 <= std_logic_vector(resize(unsigned(line_buffers_val_1_q1),9));
    tmp_29_fu_1314_p4 <= tmp_15_fu_1278_p2(9 downto 2);
    tmp_30_fu_1324_p3 <= 
        tmp_28_fu_1308_p2 when (tmp_32_fu_1284_p3(0) = '1') else 
        tmp_29_fu_1314_p4;
    tmp_31_1_cast_fu_867_p1 <= std_logic_vector(resize(unsigned(tmp_31_1_fu_860_p3),11));
    tmp_31_1_fu_860_p3 <= (window_val_1_1_1_1_load_reg_1534 & ap_const_lv1_0);
    tmp_31_2_cast_fu_1004_p1 <= std_logic_vector(resize(unsigned(tmp_31_2_fu_997_p3),11));
    tmp_31_2_fu_997_p3 <= (window_val_1_1_2_1_load_reg_1539 & ap_const_lv1_0);
        tmp_31_cast_fu_618_p1 <= std_logic_vector(resize(signed(tmp_5_fu_612_p2),64));

    tmp_31_fu_1244_p3 <= (tmp_24_reg_1683 & ap_const_lv1_0);
        tmp_32_cast5_fu_646_p1 <= std_logic_vector(resize(signed(tmp_8_fu_641_p2),64));

    tmp_32_cast_fu_769_p1 <= std_logic_vector(resize(unsigned(tmp_17_fu_761_p3),11));
    tmp_32_fu_1284_p3 <= tmp_15_fu_1278_p2(13 downto 13);
    tmp_33_1_cast_fu_878_p1 <= std_logic_vector(resize(unsigned(tmp_33_1_fu_871_p3),11));
    tmp_33_1_fu_871_p3 <= (window_val_1_2_1_reg_1667 & ap_const_lv1_0);
    tmp_33_2_cast_fu_1016_p1 <= std_logic_vector(resize(unsigned(tmp_33_2_fu_1008_p3),11));
    tmp_33_2_fu_1008_p3 <= (line_buffers_val_2_q1 & ap_const_lv1_0);
    tmp_33_fu_1332_p4 <= tmp_15_fu_1278_p2(13 downto 10);
    tmp_34_1_cast8_fu_882_p1 <= std_logic_vector(resize(unsigned(window_val_2_1_1_1_load_reg_1550),10));
    tmp_34_1_cast_fu_885_p1 <= std_logic_vector(resize(unsigned(window_val_2_1_1_1_load_reg_1550),11));
    tmp_34_2_cast6_fu_1020_p1 <= std_logic_vector(resize(unsigned(window_val_2_1_2_1_load_reg_1556),10));
    tmp_34_2_cast_fu_1141_p1 <= std_logic_vector(resize(unsigned(window_val_2_1_2_1_load_reg_1556),11));
    tmp_34_cast_fu_781_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_773_p3),11));
    tmp_35_1_cast7_fu_888_p1 <= std_logic_vector(resize(unsigned(window_val_2_2_1_reg_1653),11));
    tmp_35_1_cast_fu_891_p1 <= std_logic_vector(resize(unsigned(window_val_2_2_1_reg_1653),10));
    tmp_35_2_cast5_fu_1144_p1 <= std_logic_vector(resize(unsigned(reg_429),11));
    tmp_35_2_cast_fu_1023_p1 <= std_logic_vector(resize(unsigned(src_TDATA),10));
    tmp_35_cast_fu_717_p1 <= std_logic_vector(resize(unsigned(tmp_20_fu_711_p2),10));
        tmp_36_1_cast_fu_900_p1 <= std_logic_vector(resize(signed(tmp_36_1_fu_894_p2),11));

    tmp_36_1_fu_894_p2 <= std_logic_vector(unsigned(tmp_29_1_cast_fu_857_p1) - unsigned(tmp_28_1_cast_fu_854_p1));
        tmp_36_2_cast_fu_1033_p1 <= std_logic_vector(resize(signed(tmp_36_2_fu_1027_p2),11));

    tmp_36_2_fu_1027_p2 <= std_logic_vector(unsigned(tmp_29_2_cast_fu_993_p1) - unsigned(tmp_28_2_cast_fu_990_p1));
    tmp_37_1_fu_904_p2 <= std_logic_vector(signed(tmp_36_1_cast_fu_900_p1) - signed(tmp_31_1_cast_fu_867_p1));
    tmp_37_2_fu_1037_p2 <= std_logic_vector(signed(tmp_36_2_cast_fu_1033_p1) - signed(tmp_31_2_cast_fu_1004_p1));
        tmp_37_cast_fu_785_p1 <= std_logic_vector(resize(signed(tmp_22_reg_1648),11));

    tmp_38_1_fu_910_p2 <= std_logic_vector(unsigned(tmp_33_1_cast_fu_878_p1) + unsigned(tmp_37_1_fu_904_p2));
    tmp_38_2_fu_1043_p2 <= std_logic_vector(unsigned(tmp_33_2_cast_fu_1016_p1) + unsigned(tmp_37_2_fu_1037_p2));
    tmp_39_1_fu_916_p2 <= std_logic_vector(unsigned(tmp_38_1_fu_910_p2) - unsigned(tmp_34_1_cast_fu_885_p1));
    tmp_39_2_fu_1148_p2 <= std_logic_vector(unsigned(tmp_38_2_reg_1702) - unsigned(tmp_34_2_cast_fu_1141_p1));
    tmp_3_fu_602_p1 <= std_logic_vector(resize(unsigned(col_assign_mid2_fu_573_p3),64));
    tmp_41_1_cast_fu_936_p1 <= std_logic_vector(resize(unsigned(tmp_41_1_fu_928_p3),11));
    tmp_41_1_fu_928_p3 <= (window_val_0_1_1_fu_156 & ap_const_lv1_0);
    tmp_41_2_cast_fu_1166_p1 <= std_logic_vector(resize(unsigned(tmp_41_2_fu_1159_p3),11));
    tmp_41_2_fu_1159_p3 <= (window_val_0_1_2_load_reg_1673 & ap_const_lv1_0);
    tmp_43_1_cast_fu_948_p1 <= std_logic_vector(resize(unsigned(tmp_43_1_fu_940_p3),11));
    tmp_43_1_fu_940_p3 <= (window_val_2_1_1_fu_204 & ap_const_lv1_0);
    tmp_43_2_cast_fu_1177_p1 <= std_logic_vector(resize(unsigned(tmp_43_2_fu_1170_p3),11));
    tmp_43_2_fu_1170_p3 <= (window_val_2_1_2_load_reg_1678 & ap_const_lv1_0);
    tmp_44_1_cast_fu_958_p1 <= std_logic_vector(resize(unsigned(tmp_44_1_fu_952_p2),10));
    tmp_44_1_fu_952_p2 <= std_logic_vector(unsigned(tmp_28_1_cast_fu_854_p1) + unsigned(tmp_29_1_cast_fu_857_p1));
    tmp_44_2_cast_fu_1055_p1 <= std_logic_vector(resize(unsigned(tmp_44_2_fu_1049_p2),10));
    tmp_44_2_fu_1049_p2 <= std_logic_vector(unsigned(tmp_28_2_cast_fu_990_p1) + unsigned(tmp_29_2_cast_fu_993_p1));
    tmp_45_1_fu_962_p2 <= std_logic_vector(unsigned(tmp_44_1_cast_fu_958_p1) - unsigned(tmp_34_1_cast8_fu_882_p1));
    tmp_45_2_fu_1059_p2 <= std_logic_vector(unsigned(tmp_44_2_cast_fu_1055_p1) - unsigned(tmp_34_2_cast6_fu_1020_p1));
        tmp_46_1_cast_fu_974_p1 <= std_logic_vector(resize(signed(tmp_46_1_fu_968_p2),11));

    tmp_46_1_fu_968_p2 <= std_logic_vector(unsigned(tmp_45_1_fu_962_p2) - unsigned(tmp_35_1_cast_fu_891_p1));
        tmp_46_2_cast_fu_1181_p1 <= std_logic_vector(resize(signed(tmp_46_2_reg_1707),11));

    tmp_46_2_fu_1065_p2 <= std_logic_vector(unsigned(tmp_45_2_fu_1059_p2) - unsigned(tmp_35_2_cast_fu_1023_p1));
    tmp_47_1_fu_978_p2 <= std_logic_vector(unsigned(tmp_41_1_cast_fu_936_p1) + unsigned(tmp_46_1_cast_fu_974_p1));
    tmp_47_2_fu_1184_p2 <= std_logic_vector(unsigned(tmp_41_2_cast_fu_1166_p1) + unsigned(tmp_46_2_cast_fu_1181_p1));
    tmp_4_fu_459_p2 <= std_logic_vector(unsigned(tmp_1_cast_reg_1377) + unsigned(ap_const_lv17_1FFFF));
    tmp_5_fu_612_p2 <= std_logic_vector(unsigned(ap_const_lv14_780) + unsigned(tmp_fu_608_p1));
    tmp_7_fu_442_p2 <= std_logic_vector(unsigned(tmp_6_reg_362) + unsigned(ap_const_lv2_1));
    tmp_8_fu_641_p2 <= std_logic_vector(unsigned(ap_const_lv14_F00) + unsigned(tmp_reg_1581));
    tmp_9_fu_448_p2 <= "1" when (tmp_6_reg_362 = ap_const_lv2_2) else "0";
    tmp_cast_fu_434_p1 <= std_logic_vector(resize(unsigned(height),17));
    tmp_fu_608_p1 <= col_assign_mid2_fu_573_p3(14 - 1 downto 0);
    tmp_s_fu_454_p2 <= std_logic_vector(unsigned(tmp_cast_reg_1372) + unsigned(ap_const_lv17_1FFFF));
    val_assign_2_fu_629_p2 <= (tmp_1_fu_593_p2 and tmp_18_fu_624_p2);
end behav;
