// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="my_video_filter,hls_ip_2015_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.510000,HLS_SYN_LAT=6220809,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=1,HLS_SYN_FF=990,HLS_SYN_LUT=1001}" *)

module my_video_filter (
        ap_clk,
        ap_rst_n,
        src_TDATA,
        src_TVALID,
        src_TREADY,
        src_TKEEP,
        src_TSTRB,
        src_TUSER,
        src_TLAST,
        src_TID,
        src_TDEST,
        dest_TDATA,
        dest_TVALID,
        dest_TREADY,
        dest_TKEEP,
        dest_TSTRB,
        dest_TUSER,
        dest_TLAST,
        dest_TID,
        dest_TDEST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 6'b100;
parameter    ap_ST_pp0_stg1_fsm_3 = 6'b1000;
parameter    ap_ST_pp0_stg2_fsm_4 = 6'b10000;
parameter    ap_ST_st11_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv17_1FFFF = 17'b11111111111111111;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv14_780 = 14'b11110000000;
parameter    ap_const_lv14_F00 = 14'b111100000000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [7:0] src_TDATA;
input   src_TVALID;
output   src_TREADY;
input  [0:0] src_TKEEP;
input  [0:0] src_TSTRB;
input  [0:0] src_TUSER;
input  [0:0] src_TLAST;
input  [0:0] src_TID;
input  [0:0] src_TDEST;
output  [7:0] dest_TDATA;
output   dest_TVALID;
input   dest_TREADY;
output  [0:0] dest_TKEEP;
output  [0:0] dest_TSTRB;
output  [0:0] dest_TUSER;
output  [0:0] dest_TLAST;
output  [0:0] dest_TID;
output  [0:0] dest_TDEST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg src_TREADY;
reg[7:0] dest_TDATA;
reg dest_TVALID;
reg[0:0] dest_TLAST;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_24;
reg    ap_ready;
wire   [15:0] width;
wire   [15:0] height;
wire    my_video_filter_AXILiteS_s_axi_U_ap_dummy_ce;
reg   [31:0] indvar_flatten_reg_373;
reg   [15:0] row_reg_384;
reg   [15:0] col_assign_reg_395;
reg   [7:0] reg_429;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_100;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
wire   [0:0] exitcond_flatten_fu_506_p2;
reg    ap_sig_bdd_110;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] exitcond_flatten_reg_1562;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1;
reg    ap_sig_ioackin_dest_TREADY;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_4;
reg    ap_sig_bdd_132;
reg    ap_sig_bdd_137;
reg   [15:0] height_read_reg_1361;
reg   [15:0] width_read_reg_1366;
wire   [16:0] tmp_cast_fu_434_p1;
reg   [16:0] tmp_cast_reg_1372;
wire   [16:0] tmp_1_cast_fu_438_p1;
reg   [16:0] tmp_1_cast_reg_1377;
wire   [1:0] tmp_7_fu_442_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_163;
wire   [0:0] tmp_9_fu_448_p2;
wire   [16:0] tmp_s_fu_454_p2;
reg   [16:0] tmp_s_reg_1499;
wire   [16:0] tmp_4_fu_459_p2;
reg   [16:0] tmp_4_reg_1504;
wire   [31:0] bound_fu_1355_p2;
reg   [31:0] bound_reg_1509;
reg   [7:0] window_val_0_1_0_1_load_reg_1514;
reg   [7:0] window_val_0_1_1_1_load_reg_1519;
reg   [7:0] window_val_0_1_2_1_load_reg_1524;
reg   [7:0] window_val_1_1_0_1_load_reg_1529;
reg   [7:0] window_val_1_1_1_1_load_reg_1534;
reg   [7:0] window_val_1_1_2_1_load_reg_1539;
reg   [7:0] window_val_2_1_0_1_load_reg_1544;
reg   [7:0] window_val_2_1_1_1_load_reg_1550;
reg   [7:0] window_val_2_1_2_1_load_reg_1556;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2;
wire   [31:0] indvar_flatten_next_fu_511_p2;
reg   [31:0] indvar_flatten_next_reg_1566;
wire   [15:0] row_mid2_fu_581_p3;
reg   [15:0] row_mid2_reg_1571;
wire   [63:0] tmp_3_fu_602_p1;
reg   [63:0] tmp_3_reg_1576;
wire   [13:0] tmp_fu_608_p1;
reg   [13:0] tmp_reg_1581;
wire  signed [63:0] tmp_31_cast_fu_618_p1;
reg  signed [63:0] tmp_31_cast_reg_1586;
reg   [12:0] line_buffers_val_1_addr_reg_1591;
reg   [12:0] line_buffers_val_1_addr_1_reg_1596;
reg   [12:0] line_buffers_val_2_addr_reg_1602;
reg   [12:0] line_buffers_val_2_addr_1_reg_1607;
wire   [0:0] val_assign_2_fu_629_p2;
reg   [0:0] val_assign_2_reg_1613;
reg   [0:0] ap_reg_ppstg_val_assign_2_reg_1613_pp0_it1;
reg   [0:0] ap_reg_ppstg_val_assign_2_reg_1613_pp0_it2;
wire   [15:0] col_fu_635_p2;
reg   [15:0] col_reg_1618;
wire  signed [63:0] tmp_32_cast5_fu_646_p1;
reg  signed [63:0] tmp_32_cast5_reg_1623;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_3;
reg    ap_sig_bdd_230;
reg   [12:0] line_buffers_val_1_addr_2_reg_1628;
reg   [12:0] line_buffers_val_2_addr_2_reg_1633;
wire   [7:0] line_buffers_val_1_q0;
reg   [7:0] window_val_0_2_0_reg_1638;
wire   [10:0] tmp_14_fu_705_p2;
reg   [10:0] tmp_14_reg_1643;
wire   [9:0] tmp_22_fu_727_p2;
reg   [9:0] tmp_22_reg_1648;
reg   [7:0] window_val_2_2_1_reg_1653;
wire   [7:0] line_buffers_val_1_q1;
reg   [7:0] window_val_0_2_1_reg_1661;
wire   [7:0] line_buffers_val_2_q1;
reg   [7:0] window_val_1_2_1_reg_1667;
reg   [7:0] window_val_0_1_2_load_reg_1673;
reg   [7:0] window_val_2_1_2_load_reg_1678;
wire   [11:0] tmp_24_fu_848_p2;
reg   [11:0] tmp_24_reg_1683;
wire   [10:0] dx_1_fu_922_p2;
reg   [10:0] dx_1_reg_1688;
wire   [10:0] dy_1_fu_984_p2;
reg   [10:0] dy_1_reg_1695;
wire   [10:0] tmp_38_2_fu_1043_p2;
reg   [10:0] tmp_38_2_reg_1702;
wire   [9:0] tmp_46_2_fu_1065_p2;
reg   [9:0] tmp_46_2_reg_1707;
wire   [10:0] tmp_26_fu_1134_p3;
reg   [10:0] tmp_26_reg_1712;
wire   [11:0] tmp2_fu_1255_p2;
reg   [11:0] tmp2_reg_1717;
wire   [13:0] tmp4_fu_1261_p2;
reg   [13:0] tmp4_reg_1722;
wire   [7:0] tmp_30_fu_1324_p3;
reg   [7:0] tmp_30_reg_1727;
wire   [0:0] icmp_fu_1342_p2;
reg   [0:0] icmp_reg_1732;
wire   [7:0] p_1_fu_1348_p3;
reg   [7:0] p_1_reg_1737;
reg   [12:0] line_buffers_val_0_address0;
reg    line_buffers_val_0_ce0;
reg    line_buffers_val_0_we0;
reg   [7:0] line_buffers_val_0_d0;
wire   [12:0] line_buffers_val_0_address1;
reg    line_buffers_val_0_ce1;
reg    line_buffers_val_0_we1;
wire   [7:0] line_buffers_val_0_d1;
reg   [12:0] line_buffers_val_1_address0;
reg    line_buffers_val_1_ce0;
reg    line_buffers_val_1_we0;
reg   [7:0] line_buffers_val_1_d0;
reg   [12:0] line_buffers_val_1_address1;
reg    line_buffers_val_1_ce1;
reg    line_buffers_val_1_we1;
wire   [7:0] line_buffers_val_1_d1;
reg   [12:0] line_buffers_val_2_address0;
reg    line_buffers_val_2_ce0;
reg    line_buffers_val_2_we0;
reg   [7:0] line_buffers_val_2_d0;
wire   [7:0] line_buffers_val_2_q0;
reg   [12:0] line_buffers_val_2_address1;
reg    line_buffers_val_2_ce1;
reg    line_buffers_val_2_we1;
wire   [7:0] line_buffers_val_2_d1;
reg   [1:0] tmp_6_reg_362;
reg   [31:0] indvar_flatten_phi_fu_377_p4;
reg   [15:0] row_phi_fu_388_p4;
reg   [15:0] col_assign_phi_fu_399_p4;
reg   [7:0] window_val_0_1_0_1_fu_140;
reg   [7:0] window_val_0_1_1_1_fu_144;
reg   [7:0] window_val_0_1_2_1_fu_148;
reg   [7:0] window_val_0_1_0_fu_152;
reg   [7:0] window_val_0_1_1_fu_156;
reg   [7:0] window_val_0_1_2_fu_160;
reg   [7:0] window_val_1_1_0_1_fu_164;
reg   [7:0] window_val_1_1_1_1_fu_168;
reg   [7:0] window_val_1_1_2_1_fu_172;
reg   [7:0] window_val_1_1_0_fu_176;
reg   [7:0] window_val_1_1_1_fu_180;
reg   [7:0] window_val_1_1_2_fu_184;
reg   [7:0] window_val_2_1_0_1_fu_188;
reg   [7:0] window_val_2_1_1_1_fu_192;
reg   [7:0] window_val_2_1_2_1_fu_196;
reg   [7:0] window_val_2_1_0_fu_200;
reg   [7:0] window_val_2_1_1_fu_204;
reg   [7:0] window_val_2_1_2_fu_208;
reg    ap_reg_ioackin_dest_TREADY = 1'b0;
wire   [0:0] exitcond_fu_568_p2;
wire   [15:0] row_1_fu_562_p2;
wire   [16:0] row_cast_fu_589_p1;
wire   [15:0] col_assign_mid2_fu_573_p3;
wire   [13:0] tmp_5_fu_612_p2;
wire   [16:0] col_assign_cast_fu_598_p1;
wire   [0:0] tmp_1_fu_593_p2;
wire   [0:0] tmp_18_fu_624_p2;
wire   [13:0] tmp_8_fu_641_p2;
wire   [8:0] tmp_10_fu_659_p3;
wire   [8:0] tmp_11_fu_670_p3;
wire   [8:0] tmp_20_cast_fu_655_p1;
wire   [8:0] tmp_19_cast_fu_652_p1;
wire   [8:0] tmp_12_fu_689_p2;
wire  signed [10:0] tmp_27_cast_fu_695_p1;
wire   [10:0] tmp_22_cast_fu_666_p1;
wire   [10:0] tmp_24_cast_fu_678_p1;
wire   [10:0] tmp_13_fu_699_p2;
wire   [8:0] tmp_20_fu_711_p2;
wire   [9:0] tmp_35_cast_fu_717_p1;
wire   [9:0] tmp_25_cast1_fu_682_p1;
wire   [9:0] tmp_21_fu_721_p2;
wire   [9:0] tmp_26_cast_fu_685_p1;
wire   [10:0] tmp_25_cast_fu_743_p1;
wire   [10:0] tmp_16_fu_750_p2;
wire   [10:0] tmp_26_cast9_fu_746_p1;
wire   [8:0] tmp_17_fu_761_p3;
wire   [8:0] tmp_19_fu_773_p3;
wire   [10:0] tmp_32_cast_fu_769_p1;
wire  signed [10:0] tmp_37_cast_fu_785_p1;
wire   [10:0] tmp_23_fu_788_p2;
wire   [10:0] tmp_34_cast_fu_781_p1;
wire   [10:0] dy_fu_794_p2;
wire   [0:0] abscond_fu_806_p2;
wire   [10:0] neg_fu_800_p2;
wire   [10:0] abs_fu_812_p3;
wire   [10:0] dx_fu_755_p2;
wire   [0:0] abscond1_fu_830_p2;
wire   [10:0] neg1_fu_824_p2;
wire   [10:0] abs1_fu_836_p3;
wire  signed [11:0] abs1_cast_fu_844_p1;
wire  signed [11:0] abs_cast_fu_820_p1;
wire   [8:0] tmp_31_1_fu_860_p3;
wire   [8:0] tmp_33_1_fu_871_p3;
wire   [8:0] tmp_29_1_cast_fu_857_p1;
wire   [8:0] tmp_28_1_cast_fu_854_p1;
wire   [8:0] tmp_36_1_fu_894_p2;
wire  signed [10:0] tmp_36_1_cast_fu_900_p1;
wire   [10:0] tmp_31_1_cast_fu_867_p1;
wire   [10:0] tmp_33_1_cast_fu_878_p1;
wire   [10:0] tmp_37_1_fu_904_p2;
wire   [10:0] tmp_38_1_fu_910_p2;
wire   [10:0] tmp_34_1_cast_fu_885_p1;
wire   [10:0] tmp_39_1_fu_916_p2;
wire   [10:0] tmp_35_1_cast7_fu_888_p1;
wire   [8:0] tmp_41_1_fu_928_p3;
wire   [8:0] tmp_43_1_fu_940_p3;
wire   [8:0] tmp_44_1_fu_952_p2;
wire   [9:0] tmp_44_1_cast_fu_958_p1;
wire   [9:0] tmp_34_1_cast8_fu_882_p1;
wire   [9:0] tmp_45_1_fu_962_p2;
wire   [9:0] tmp_35_1_cast_fu_891_p1;
wire   [9:0] tmp_46_1_fu_968_p2;
wire   [10:0] tmp_41_1_cast_fu_936_p1;
wire  signed [10:0] tmp_46_1_cast_fu_974_p1;
wire   [10:0] tmp_47_1_fu_978_p2;
wire   [10:0] tmp_43_1_cast_fu_948_p1;
wire   [8:0] tmp_31_2_fu_997_p3;
wire   [8:0] tmp_33_2_fu_1008_p3;
wire   [8:0] tmp_29_2_cast_fu_993_p1;
wire   [8:0] tmp_28_2_cast_fu_990_p1;
wire   [8:0] tmp_36_2_fu_1027_p2;
wire  signed [10:0] tmp_36_2_cast_fu_1033_p1;
wire   [10:0] tmp_31_2_cast_fu_1004_p1;
wire   [10:0] tmp_33_2_cast_fu_1016_p1;
wire   [10:0] tmp_37_2_fu_1037_p2;
wire   [8:0] tmp_44_2_fu_1049_p2;
wire   [9:0] tmp_44_2_cast_fu_1055_p1;
wire   [9:0] tmp_34_2_cast6_fu_1020_p1;
wire   [9:0] tmp_45_2_fu_1059_p2;
wire   [9:0] tmp_35_2_cast_fu_1023_p1;
wire   [0:0] abscond_1_fu_1108_p2;
wire   [10:0] neg_1_fu_1103_p2;
wire   [10:0] tmp_25_fu_1113_p3;
wire   [0:0] abscond1_1_fu_1129_p2;
wire   [10:0] neg1_1_fu_1124_p2;
wire   [10:0] tmp_34_2_cast_fu_1141_p1;
wire   [10:0] tmp_39_2_fu_1148_p2;
wire   [10:0] tmp_35_2_cast5_fu_1144_p1;
wire   [8:0] tmp_41_2_fu_1159_p3;
wire   [8:0] tmp_43_2_fu_1170_p3;
wire   [10:0] tmp_41_2_cast_fu_1166_p1;
wire  signed [10:0] tmp_46_2_cast_fu_1181_p1;
wire   [10:0] tmp_47_2_fu_1184_p2;
wire   [10:0] tmp_43_2_cast_fu_1177_p1;
wire   [10:0] dy_2_fu_1190_p2;
wire   [0:0] abscond_2_fu_1202_p2;
wire   [10:0] neg_2_fu_1196_p2;
wire   [10:0] abs_2_fu_1208_p3;
wire   [10:0] dx_2_fu_1153_p2;
wire   [0:0] abscond1_2_fu_1226_p2;
wire   [10:0] neg1_2_fu_1220_p2;
wire   [10:0] abs1_2_fu_1232_p3;
wire   [12:0] tmp_31_fu_1244_p3;
wire  signed [11:0] abs1_2_cast_fu_1240_p1;
wire  signed [11:0] abs_2_cast_fu_1216_p1;
wire  signed [13:0] tmp_13_cast_fu_1251_p1;
wire  signed [13:0] abs_1_cast_cast_fu_1120_p1;
wire  signed [13:0] abs1_1_cast_cast_fu_1267_p1;
wire   [13:0] tmp3_fu_1273_p2;
wire  signed [13:0] tmp2_cast_cast_fu_1270_p1;
wire   [13:0] tmp_15_fu_1278_p2;
wire   [13:0] p_neg_fu_1292_p2;
wire   [7:0] tmp_27_fu_1298_p4;
wire   [0:0] tmp_32_fu_1284_p3;
wire   [7:0] tmp_28_fu_1308_p2;
wire   [7:0] tmp_29_fu_1314_p4;
wire   [3:0] tmp_33_fu_1332_p4;
wire   [15:0] bound_fu_1355_p0;
wire   [15:0] bound_fu_1355_p1;
reg    ap_sig_cseq_ST_st11_fsm_5;
reg    ap_sig_bdd_1030;
reg   [5:0] ap_NS_fsm;
wire   [31:0] bound_fu_1355_p00;
wire   [31:0] bound_fu_1355_p10;


my_video_filter_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
my_video_filter_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( my_video_filter_AXILiteS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .width( width ),
    .height( height )
);

my_video_filter_line_buffers_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 5760 ),
    .AddressWidth( 13 ))
line_buffers_val_0_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( line_buffers_val_0_address0 ),
    .ce0( line_buffers_val_0_ce0 ),
    .we0( line_buffers_val_0_we0 ),
    .d0( line_buffers_val_0_d0 ),
    .address1( line_buffers_val_0_address1 ),
    .ce1( line_buffers_val_0_ce1 ),
    .we1( line_buffers_val_0_we1 ),
    .d1( line_buffers_val_0_d1 )
);

my_video_filter_line_buffers_val_1 #(
    .DataWidth( 8 ),
    .AddressRange( 5760 ),
    .AddressWidth( 13 ))
line_buffers_val_1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( line_buffers_val_1_address0 ),
    .ce0( line_buffers_val_1_ce0 ),
    .we0( line_buffers_val_1_we0 ),
    .d0( line_buffers_val_1_d0 ),
    .q0( line_buffers_val_1_q0 ),
    .address1( line_buffers_val_1_address1 ),
    .ce1( line_buffers_val_1_ce1 ),
    .we1( line_buffers_val_1_we1 ),
    .d1( line_buffers_val_1_d1 ),
    .q1( line_buffers_val_1_q1 )
);

my_video_filter_line_buffers_val_1 #(
    .DataWidth( 8 ),
    .AddressRange( 5760 ),
    .AddressWidth( 13 ))
line_buffers_val_2_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( line_buffers_val_2_address0 ),
    .ce0( line_buffers_val_2_ce0 ),
    .we0( line_buffers_val_2_we0 ),
    .d0( line_buffers_val_2_d0 ),
    .q0( line_buffers_val_2_q0 ),
    .address1( line_buffers_val_2_address1 ),
    .ce1( line_buffers_val_2_ce1 ),
    .we1( line_buffers_val_2_we1 ),
    .d1( line_buffers_val_2_d1 ),
    .q1( line_buffers_val_2_q1 )
);

my_video_filter_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
my_video_filter_mul_mul_16ns_16ns_32_1_U1(
    .din0( bound_fu_1355_p0 ),
    .din1( bound_fu_1355_p1 ),
    .dout( bound_fu_1355_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_dest_TREADY assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_dest_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_dest_TREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
            ap_reg_ioackin_dest_TREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) & (ap_const_logic_1 == dest_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) & (ap_const_logic_1 == dest_TREADY)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) & (ap_const_logic_1 == dest_TREADY)))) begin
            ap_reg_ioackin_dest_TREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_flatten_fu_506_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_9_fu_448_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_9_fu_448_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY))) & ~(ap_const_lv1_0 == exitcond_flatten_reg_1562)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY))))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_9_fu_448_p2))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond_flatten_reg_1562))) begin
        col_assign_reg_395 <= col_reg_1618;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_9_fu_448_p2))) begin
        col_assign_reg_395 <= ap_const_lv16_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond_flatten_reg_1562))) begin
        indvar_flatten_reg_373 <= indvar_flatten_next_reg_1566;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_9_fu_448_p2))) begin
        indvar_flatten_reg_373 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond_flatten_reg_1562))) begin
        row_reg_384 <= row_mid2_reg_1571;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_9_fu_448_p2))) begin
        row_reg_384 <= ap_const_lv16_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_6_reg_362 <= ap_const_lv2_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == tmp_9_fu_448_p2))) begin
        tmp_6_reg_362 <= tmp_7_fu_442_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 <= exitcond_flatten_reg_1562;
        ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 <= ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1;
        ap_reg_ppstg_val_assign_2_reg_1613_pp0_it1 <= val_assign_2_reg_1613;
        ap_reg_ppstg_val_assign_2_reg_1613_pp0_it2 <= ap_reg_ppstg_val_assign_2_reg_1613_pp0_it1;
        exitcond_flatten_reg_1562 <= exitcond_flatten_fu_506_p2;
        window_val_0_1_0_1_load_reg_1514 <= window_val_0_1_0_1_fu_140;
        window_val_0_1_1_1_load_reg_1519 <= window_val_0_1_1_1_fu_144;
        window_val_0_1_2_1_load_reg_1524 <= window_val_0_1_2_1_fu_148;
        window_val_1_1_0_1_load_reg_1529 <= window_val_1_1_0_1_fu_164;
        window_val_1_1_1_1_load_reg_1534 <= window_val_1_1_1_1_fu_168;
        window_val_1_1_2_1_load_reg_1539 <= window_val_1_1_2_1_fu_172;
        window_val_2_1_0_1_load_reg_1544 <= window_val_2_1_0_1_fu_188;
        window_val_2_1_1_1_load_reg_1550 <= window_val_2_1_1_1_fu_192;
        window_val_2_1_2_1_load_reg_1556 <= window_val_2_1_2_1_fu_196;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == tmp_9_fu_448_p2))) begin
        bound_reg_1509 <= bound_fu_1355_p2;
        tmp_4_reg_1504 <= tmp_4_fu_459_p2;
        tmp_s_reg_1499 <= tmp_s_fu_454_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_506_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        col_reg_1618 <= col_fu_635_p2;
        row_mid2_reg_1571 <= row_mid2_fu_581_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY))))) begin
        dx_1_reg_1688 <= dx_1_fu_922_p2;
        dy_1_reg_1695 <= dy_1_fu_984_p2;
        tmp_24_reg_1683 <= tmp_24_fu_848_p2;
        tmp_38_2_reg_1702 <= tmp_38_2_fu_1043_p2;
        tmp_46_2_reg_1707 <= tmp_46_2_fu_1065_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        height_read_reg_1361 <= height;
        tmp_1_cast_reg_1377[15 : 0] <= tmp_1_cast_fu_438_p1[15 : 0];
        tmp_cast_reg_1372[15 : 0] <= tmp_cast_fu_434_p1[15 : 0];
        width_read_reg_1366 <= width;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))) begin
        icmp_reg_1732 <= icmp_fu_1342_p2;
        tmp_30_reg_1727 <= tmp_30_fu_1324_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        indvar_flatten_next_reg_1566 <= indvar_flatten_next_fu_511_p2;
        window_val_0_1_0_1_fu_140 <= window_val_0_1_0_fu_152;
        window_val_0_1_1_1_fu_144 <= window_val_0_1_1_fu_156;
        window_val_0_1_2_1_fu_148 <= window_val_0_1_2_fu_160;
        window_val_1_1_0_1_fu_164 <= window_val_1_1_0_fu_176;
        window_val_1_1_1_1_fu_168 <= window_val_1_1_1_fu_180;
        window_val_1_1_2_1_fu_172 <= window_val_1_1_2_fu_184;
        window_val_2_1_0_1_fu_188 <= window_val_2_1_0_fu_200;
        window_val_2_1_1_1_fu_192 <= window_val_2_1_1_fu_204;
        window_val_2_1_2_1_fu_196 <= window_val_2_1_2_fu_208;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_flatten_fu_506_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        line_buffers_val_1_addr_1_reg_1596 <= tmp_31_cast_fu_618_p1;
        line_buffers_val_1_addr_reg_1591 <= tmp_3_fu_602_p1;
        line_buffers_val_2_addr_1_reg_1607 <= tmp_31_cast_fu_618_p1;
        line_buffers_val_2_addr_reg_1602 <= tmp_3_fu_602_p1;
        tmp_31_cast_reg_1586 <= tmp_31_cast_fu_618_p1;
        tmp_3_reg_1576[15 : 0] <= tmp_3_fu_602_p1[15 : 0];
        tmp_reg_1581 <= tmp_fu_608_p1;
        val_assign_2_reg_1613 <= val_assign_2_fu_629_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_lv1_0 == exitcond_flatten_reg_1562) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))) begin
        line_buffers_val_1_addr_2_reg_1628 <= tmp_32_cast5_fu_646_p1;
        line_buffers_val_2_addr_2_reg_1633 <= tmp_32_cast5_fu_646_p1;
        tmp_14_reg_1643 <= tmp_14_fu_705_p2;
        tmp_22_reg_1648 <= tmp_22_fu_727_p2;
        tmp_32_cast5_reg_1623 <= tmp_32_cast5_fu_646_p1;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY))))) begin
        p_1_reg_1737 <= p_1_fu_1348_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_506_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))))) begin
        reg_429 <= src_TDATA;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond_flatten_reg_1562))) begin
        tmp2_reg_1717 <= tmp2_fu_1255_p2;
        tmp4_reg_1722 <= tmp4_fu_1261_p2;
        tmp_26_reg_1712 <= tmp_26_fu_1134_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY))))) begin
        window_val_0_1_0_fu_152 <= window_val_0_2_0_reg_1638;
        window_val_0_1_1_fu_156 <= window_val_0_2_1_reg_1661;
        window_val_0_1_2_fu_160 <= line_buffers_val_1_q1;
        window_val_0_1_2_load_reg_1673 <= window_val_0_1_2_fu_160;
        window_val_1_1_2_fu_184 <= line_buffers_val_2_q1;
        window_val_2_1_0_fu_200 <= reg_429;
        window_val_2_1_1_fu_204 <= window_val_2_2_1_reg_1653;
        window_val_2_1_2_fu_208 <= src_TDATA;
        window_val_2_1_2_load_reg_1678 <= window_val_2_1_2_fu_208;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))) begin
        window_val_0_2_0_reg_1638 <= line_buffers_val_1_q0;
        window_val_0_2_1_reg_1661 <= line_buffers_val_1_q1;
        window_val_1_1_0_fu_176 <= line_buffers_val_2_q0;
        window_val_1_1_1_fu_180 <= line_buffers_val_2_q1;
        window_val_1_2_1_reg_1667 <= line_buffers_val_2_q1;
        window_val_2_2_1_reg_1653 <= src_TDATA;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_5)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_5)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. ///
always @ (ap_sig_bdd_100) begin
    if (ap_sig_bdd_100) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_3 assign process. ///
always @ (ap_sig_bdd_230) begin
    if (ap_sig_bdd_230) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_4 assign process. ///
always @ (ap_sig_bdd_132) begin
    if (ap_sig_bdd_132) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_5 assign process. ///
always @ (ap_sig_bdd_1030) begin
    if (ap_sig_bdd_1030) begin
        ap_sig_cseq_ST_st11_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_24) begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_163) begin
    if (ap_sig_bdd_163) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_dest_TREADY assign process. ///
always @ (dest_TREADY or ap_reg_ioackin_dest_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_dest_TREADY)) begin
        ap_sig_ioackin_dest_TREADY = dest_TREADY;
    end else begin
        ap_sig_ioackin_dest_TREADY = ap_const_logic_1;
    end
end

/// col_assign_phi_fu_399_p4 assign process. ///
always @ (col_assign_reg_395 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1562 or col_reg_1618) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond_flatten_reg_1562))) begin
        col_assign_phi_fu_399_p4 = col_reg_1618;
    end else begin
        col_assign_phi_fu_399_p4 = col_assign_reg_395;
    end
end

/// dest_TDATA assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3 or p_1_fu_1348_p3 or p_1_reg_1737) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137)))) begin
        dest_TDATA = p_1_reg_1737;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137))) begin
        dest_TDATA = p_1_fu_1348_p3;
    end else begin
        dest_TDATA = 'bx;
    end
end

/// dest_TLAST assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_reg_ppstg_val_assign_2_reg_1613_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137))) begin
        dest_TLAST = ap_reg_ppstg_val_assign_2_reg_1613_pp0_it2;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110)))) begin
        dest_TLAST = ap_const_lv1_0;
    end else begin
        dest_TLAST = 'bx;
    end
end

/// dest_TVALID assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3 or ap_reg_ioackin_dest_TREADY) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) & (ap_const_logic_0 == ap_reg_ioackin_dest_TREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) & (ap_const_logic_0 == ap_reg_ioackin_dest_TREADY)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) & (ap_const_logic_0 == ap_reg_ioackin_dest_TREADY)))) begin
        dest_TVALID = ap_const_logic_1;
    end else begin
        dest_TVALID = ap_const_logic_0;
    end
end

/// indvar_flatten_phi_fu_377_p4 assign process. ///
always @ (indvar_flatten_reg_373 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1562 or indvar_flatten_next_reg_1566) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond_flatten_reg_1562))) begin
        indvar_flatten_phi_fu_377_p4 = indvar_flatten_next_reg_1566;
    end else begin
        indvar_flatten_phi_fu_377_p4 = indvar_flatten_reg_373;
    end
end

/// line_buffers_val_0_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or tmp_3_reg_1576 or tmp_32_cast5_reg_1623 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4)) begin
            line_buffers_val_0_address0 = tmp_32_cast5_reg_1623;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3)) begin
            line_buffers_val_0_address0 = tmp_3_reg_1576;
        end else begin
            line_buffers_val_0_address0 = 'bx;
        end
    end else begin
        line_buffers_val_0_address0 = 'bx;
    end
end

/// line_buffers_val_0_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
        line_buffers_val_0_ce0 = ap_const_logic_1;
    end else begin
        line_buffers_val_0_ce0 = ap_const_logic_0;
    end
end

/// line_buffers_val_0_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))) begin
        line_buffers_val_0_ce1 = ap_const_logic_1;
    end else begin
        line_buffers_val_0_ce1 = ap_const_logic_0;
    end
end

/// line_buffers_val_0_d0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_cseq_ST_pp0_stg1_fsm_3 or line_buffers_val_1_q0 or line_buffers_val_1_q1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4)) begin
            line_buffers_val_0_d0 = line_buffers_val_1_q1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3)) begin
            line_buffers_val_0_d0 = line_buffers_val_1_q0;
        end else begin
            line_buffers_val_0_d0 = 'bx;
        end
    end else begin
        line_buffers_val_0_d0 = 'bx;
    end
end

/// line_buffers_val_0_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1562 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
        line_buffers_val_0_we0 = ap_const_logic_1;
    end else begin
        line_buffers_val_0_we0 = ap_const_logic_0;
    end
end

/// line_buffers_val_0_we1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or exitcond_flatten_reg_1562 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))))) begin
        line_buffers_val_0_we1 = ap_const_logic_1;
    end else begin
        line_buffers_val_0_we1 = ap_const_logic_0;
    end
end

/// line_buffers_val_1_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or tmp_3_fu_602_p1 or line_buffers_val_1_addr_reg_1591 or line_buffers_val_1_addr_1_reg_1596 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4)) begin
            line_buffers_val_1_address0 = line_buffers_val_1_addr_1_reg_1596;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3)) begin
            line_buffers_val_1_address0 = line_buffers_val_1_addr_reg_1591;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2)) begin
            line_buffers_val_1_address0 = tmp_3_fu_602_p1;
        end else begin
            line_buffers_val_1_address0 = 'bx;
        end
    end else begin
        line_buffers_val_1_address0 = 'bx;
    end
end

/// line_buffers_val_1_address1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or tmp_31_cast_fu_618_p1 or tmp_32_cast5_fu_646_p1 or ap_sig_cseq_ST_pp0_stg1_fsm_3 or line_buffers_val_1_addr_2_reg_1628) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4)) begin
            line_buffers_val_1_address1 = line_buffers_val_1_addr_2_reg_1628;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3)) begin
            line_buffers_val_1_address1 = tmp_32_cast5_fu_646_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2)) begin
            line_buffers_val_1_address1 = tmp_31_cast_fu_618_p1;
        end else begin
            line_buffers_val_1_address1 = 'bx;
        end
    end else begin
        line_buffers_val_1_address1 = 'bx;
    end
end

/// line_buffers_val_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
        line_buffers_val_1_ce0 = ap_const_logic_1;
    end else begin
        line_buffers_val_1_ce0 = ap_const_logic_0;
    end
end

/// line_buffers_val_1_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
        line_buffers_val_1_ce1 = ap_const_logic_1;
    end else begin
        line_buffers_val_1_ce1 = ap_const_logic_0;
    end
end

/// line_buffers_val_1_d0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_cseq_ST_pp0_stg1_fsm_3 or window_val_1_2_1_reg_1667 or line_buffers_val_2_q0) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4)) begin
            line_buffers_val_1_d0 = window_val_1_2_1_reg_1667;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3)) begin
            line_buffers_val_1_d0 = line_buffers_val_2_q0;
        end else begin
            line_buffers_val_1_d0 = 'bx;
        end
    end else begin
        line_buffers_val_1_d0 = 'bx;
    end
end

/// line_buffers_val_1_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1562 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
        line_buffers_val_1_we0 = ap_const_logic_1;
    end else begin
        line_buffers_val_1_we0 = ap_const_logic_0;
    end
end

/// line_buffers_val_1_we1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1562 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY))))) begin
        line_buffers_val_1_we1 = ap_const_logic_1;
    end else begin
        line_buffers_val_1_we1 = ap_const_logic_0;
    end
end

/// line_buffers_val_2_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or tmp_3_fu_602_p1 or line_buffers_val_2_addr_reg_1602 or line_buffers_val_2_addr_1_reg_1607 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4)) begin
            line_buffers_val_2_address0 = line_buffers_val_2_addr_1_reg_1607;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3)) begin
            line_buffers_val_2_address0 = line_buffers_val_2_addr_reg_1602;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2)) begin
            line_buffers_val_2_address0 = tmp_3_fu_602_p1;
        end else begin
            line_buffers_val_2_address0 = 'bx;
        end
    end else begin
        line_buffers_val_2_address0 = 'bx;
    end
end

/// line_buffers_val_2_address1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or tmp_31_cast_fu_618_p1 or tmp_32_cast5_fu_646_p1 or ap_sig_cseq_ST_pp0_stg1_fsm_3 or line_buffers_val_2_addr_2_reg_1633) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4)) begin
            line_buffers_val_2_address1 = line_buffers_val_2_addr_2_reg_1633;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3)) begin
            line_buffers_val_2_address1 = tmp_32_cast5_fu_646_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2)) begin
            line_buffers_val_2_address1 = tmp_31_cast_fu_618_p1;
        end else begin
            line_buffers_val_2_address1 = 'bx;
        end
    end else begin
        line_buffers_val_2_address1 = 'bx;
    end
end

/// line_buffers_val_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
        line_buffers_val_2_ce0 = ap_const_logic_1;
    end else begin
        line_buffers_val_2_ce0 = ap_const_logic_0;
    end
end

/// line_buffers_val_2_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
        line_buffers_val_2_ce1 = ap_const_logic_1;
    end else begin
        line_buffers_val_2_ce1 = ap_const_logic_0;
    end
end

/// line_buffers_val_2_d0 assign process. ///
always @ (reg_429 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_cseq_ST_pp0_stg1_fsm_3 or window_val_2_2_1_reg_1653) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4)) begin
            line_buffers_val_2_d0 = window_val_2_2_1_reg_1653;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3)) begin
            line_buffers_val_2_d0 = reg_429;
        end else begin
            line_buffers_val_2_d0 = 'bx;
        end
    end else begin
        line_buffers_val_2_d0 = 'bx;
    end
end

/// line_buffers_val_2_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1562 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
        line_buffers_val_2_we0 = ap_const_logic_1;
    end else begin
        line_buffers_val_2_we0 = ap_const_logic_0;
    end
end

/// line_buffers_val_2_we1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1562 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY))))) begin
        line_buffers_val_2_we1 = ap_const_logic_1;
    end else begin
        line_buffers_val_2_we1 = ap_const_logic_0;
    end
end

/// row_phi_fu_388_p4 assign process. ///
always @ (row_reg_384 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1562 or row_mid2_reg_1571) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond_flatten_reg_1562))) begin
        row_phi_fu_388_p4 = row_mid2_reg_1571;
    end else begin
        row_phi_fu_388_p4 = row_reg_384;
    end
end

/// src_TREADY assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or exitcond_flatten_fu_506_p2 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1562 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg2_fsm_4 or ap_sig_bdd_137 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_506_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_reg_1562) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2)))))) begin
        src_TREADY = ap_const_logic_1;
    end else begin
        src_TREADY = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond_flatten_fu_506_p2 or ap_sig_bdd_110 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1 or ap_sig_ioackin_dest_TREADY or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_137 or tmp_9_fu_448_p2 or ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_3) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == tmp_9_fu_448_p2)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if ((~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_flatten_fu_506_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_3;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_110) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(exitcond_flatten_fu_506_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st11_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg1_fsm_3 : 
        begin
            if ((~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_4;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_0 == ap_sig_ioackin_dest_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st11_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_3;
            end
        end
        ap_ST_pp0_stg2_fsm_4 : 
        begin
            if (~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_137) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1562_pp0_it1) & (ap_const_logic_0 == ap_sig_ioackin_dest_TREADY)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_4;
            end
        end
        ap_ST_st11_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abs1_1_cast_cast_fu_1267_p1 = $signed(tmp_26_reg_1712);
assign abs1_2_cast_fu_1240_p1 = $signed(abs1_2_fu_1232_p3);
assign abs1_2_fu_1232_p3 = ((abscond1_2_fu_1226_p2[0:0] === 1'b1) ? dx_2_fu_1153_p2 : neg1_2_fu_1220_p2);
assign abs1_cast_fu_844_p1 = $signed(abs1_fu_836_p3);
assign abs1_fu_836_p3 = ((abscond1_fu_830_p2[0:0] === 1'b1) ? dx_fu_755_p2 : neg1_fu_824_p2);
assign abs_1_cast_cast_fu_1120_p1 = $signed(tmp_25_fu_1113_p3);
assign abs_2_cast_fu_1216_p1 = $signed(abs_2_fu_1208_p3);
assign abs_2_fu_1208_p3 = ((abscond_2_fu_1202_p2[0:0] === 1'b1) ? dy_2_fu_1190_p2 : neg_2_fu_1196_p2);
assign abs_cast_fu_820_p1 = $signed(abs_fu_812_p3);
assign abs_fu_812_p3 = ((abscond_fu_806_p2[0:0] === 1'b1) ? dy_fu_794_p2 : neg_fu_800_p2);
assign abscond1_1_fu_1129_p2 = ($signed(dx_1_reg_1688) > $signed(11'b00000000000)? 1'b1: 1'b0);
assign abscond1_2_fu_1226_p2 = ($signed(dx_2_fu_1153_p2) > $signed(11'b00000000000)? 1'b1: 1'b0);
assign abscond1_fu_830_p2 = ($signed(dx_fu_755_p2) > $signed(11'b00000000000)? 1'b1: 1'b0);
assign abscond_1_fu_1108_p2 = ($signed(dy_1_reg_1695) > $signed(11'b00000000000)? 1'b1: 1'b0);
assign abscond_2_fu_1202_p2 = ($signed(dy_2_fu_1190_p2) > $signed(11'b00000000000)? 1'b1: 1'b0);
assign abscond_fu_806_p2 = ($signed(dy_fu_794_p2) > $signed(11'b00000000000)? 1'b1: 1'b0);

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_100 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_100 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_1030 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_1030 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_110 assign process. ///
always @ (src_TVALID or exitcond_flatten_fu_506_p2) begin
    ap_sig_bdd_110 = ((src_TVALID == ap_const_logic_0) & (exitcond_flatten_fu_506_p2 == ap_const_lv1_0));
end

/// ap_sig_bdd_132 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_132 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_137 assign process. ///
always @ (src_TVALID or exitcond_flatten_reg_1562) begin
    ap_sig_bdd_137 = ((src_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond_flatten_reg_1562));
end

/// ap_sig_bdd_163 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_163 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_230 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_230 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_24 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_24 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign bound_fu_1355_p0 = bound_fu_1355_p00;
assign bound_fu_1355_p00 = width_read_reg_1366;
assign bound_fu_1355_p1 = bound_fu_1355_p10;
assign bound_fu_1355_p10 = height_read_reg_1361;
assign col_assign_cast_fu_598_p1 = col_assign_mid2_fu_573_p3;
assign col_assign_mid2_fu_573_p3 = ((exitcond_fu_568_p2[0:0] === 1'b1) ? ap_const_lv16_0 : col_assign_phi_fu_399_p4);
assign col_fu_635_p2 = (ap_const_lv16_1 + col_assign_mid2_fu_573_p3);
assign dest_TDEST = ap_const_lv1_0;
assign dest_TID = ap_const_lv1_0;
assign dest_TKEEP = ap_const_lv1_1;
assign dest_TSTRB = ap_const_lv1_0;
assign dest_TUSER = ap_const_lv1_0;
assign dx_1_fu_922_p2 = (tmp_39_1_fu_916_p2 + tmp_35_1_cast7_fu_888_p1);
assign dx_2_fu_1153_p2 = (tmp_39_2_fu_1148_p2 + tmp_35_2_cast5_fu_1144_p1);
assign dx_fu_755_p2 = (tmp_16_fu_750_p2 + tmp_26_cast9_fu_746_p1);
assign dy_1_fu_984_p2 = (tmp_47_1_fu_978_p2 - tmp_43_1_cast_fu_948_p1);
assign dy_2_fu_1190_p2 = (tmp_47_2_fu_1184_p2 - tmp_43_2_cast_fu_1177_p1);
assign dy_fu_794_p2 = (tmp_23_fu_788_p2 - tmp_34_cast_fu_781_p1);
assign exitcond_flatten_fu_506_p2 = (indvar_flatten_phi_fu_377_p4 == bound_reg_1509? 1'b1: 1'b0);
assign exitcond_fu_568_p2 = (col_assign_phi_fu_399_p4 == width_read_reg_1366? 1'b1: 1'b0);
assign icmp_fu_1342_p2 = ($signed(tmp_33_fu_1332_p4) > $signed(4'b0000)? 1'b1: 1'b0);
assign indvar_flatten_next_fu_511_p2 = (indvar_flatten_phi_fu_377_p4 + ap_const_lv32_1);
assign line_buffers_val_0_address1 = tmp_31_cast_reg_1586;
assign line_buffers_val_0_d1 = line_buffers_val_1_q1;
assign line_buffers_val_1_d1 = line_buffers_val_2_q1;
assign line_buffers_val_2_d1 = src_TDATA;
assign my_video_filter_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign neg1_1_fu_1124_p2 = (ap_const_lv11_0 - dx_1_reg_1688);
assign neg1_2_fu_1220_p2 = (ap_const_lv11_0 - dx_2_fu_1153_p2);
assign neg1_fu_824_p2 = (ap_const_lv11_0 - dx_fu_755_p2);
assign neg_1_fu_1103_p2 = (ap_const_lv11_0 - dy_1_reg_1695);
assign neg_2_fu_1196_p2 = (ap_const_lv11_0 - dy_2_fu_1190_p2);
assign neg_fu_800_p2 = (ap_const_lv11_0 - dy_fu_794_p2);
assign p_1_fu_1348_p3 = ((icmp_reg_1732[0:0] === 1'b1) ? ap_const_lv8_FF : tmp_30_reg_1727);
assign p_neg_fu_1292_p2 = (ap_const_lv14_0 - tmp_15_fu_1278_p2);
assign row_1_fu_562_p2 = (ap_const_lv16_1 + row_phi_fu_388_p4);
assign row_cast_fu_589_p1 = row_mid2_fu_581_p3;
assign row_mid2_fu_581_p3 = ((exitcond_fu_568_p2[0:0] === 1'b1) ? row_1_fu_562_p2 : row_phi_fu_388_p4);
assign tmp2_cast_cast_fu_1270_p1 = $signed(tmp2_reg_1717);
assign tmp2_fu_1255_p2 = ($signed(abs1_2_cast_fu_1240_p1) + $signed(abs_2_cast_fu_1216_p1));
assign tmp3_fu_1273_p2 = ($signed(tmp4_reg_1722) + $signed(abs1_1_cast_cast_fu_1267_p1));
assign tmp4_fu_1261_p2 = ($signed(tmp_13_cast_fu_1251_p1) + $signed(abs_1_cast_cast_fu_1120_p1));
assign tmp_10_fu_659_p3 = {{window_val_1_1_0_1_load_reg_1529}, {ap_const_lv1_0}};
assign tmp_11_fu_670_p3 = {{line_buffers_val_2_q0}, {ap_const_lv1_0}};
assign tmp_12_fu_689_p2 = (tmp_20_cast_fu_655_p1 - tmp_19_cast_fu_652_p1);
assign tmp_13_cast_fu_1251_p1 = $signed(tmp_31_fu_1244_p3);
assign tmp_13_fu_699_p2 = ($signed(tmp_27_cast_fu_695_p1) - $signed(tmp_22_cast_fu_666_p1));
assign tmp_14_fu_705_p2 = (tmp_24_cast_fu_678_p1 + tmp_13_fu_699_p2);
assign tmp_15_fu_1278_p2 = ($signed(tmp3_fu_1273_p2) + $signed(tmp2_cast_cast_fu_1270_p1));
assign tmp_16_fu_750_p2 = (tmp_14_reg_1643 - tmp_25_cast_fu_743_p1);
assign tmp_17_fu_761_p3 = {{window_val_0_1_0_fu_152}, {ap_const_lv1_0}};
assign tmp_18_fu_624_p2 = (col_assign_cast_fu_598_p1 == tmp_4_reg_1504? 1'b1: 1'b0);
assign tmp_19_cast_fu_652_p1 = window_val_0_1_0_1_load_reg_1514;
assign tmp_19_fu_773_p3 = {{window_val_2_1_0_fu_200}, {ap_const_lv1_0}};
assign tmp_1_cast_fu_438_p1 = width;
assign tmp_1_fu_593_p2 = (row_cast_fu_589_p1 == tmp_s_reg_1499? 1'b1: 1'b0);
assign tmp_20_cast_fu_655_p1 = line_buffers_val_1_q0;
assign tmp_20_fu_711_p2 = (tmp_19_cast_fu_652_p1 + tmp_20_cast_fu_655_p1);
assign tmp_21_fu_721_p2 = (tmp_35_cast_fu_717_p1 - tmp_25_cast1_fu_682_p1);
assign tmp_22_cast_fu_666_p1 = tmp_10_fu_659_p3;
assign tmp_22_fu_727_p2 = (tmp_21_fu_721_p2 - tmp_26_cast_fu_685_p1);
assign tmp_23_fu_788_p2 = ($signed(tmp_32_cast_fu_769_p1) + $signed(tmp_37_cast_fu_785_p1));
assign tmp_24_cast_fu_678_p1 = tmp_11_fu_670_p3;
assign tmp_24_fu_848_p2 = ($signed(abs1_cast_fu_844_p1) + $signed(abs_cast_fu_820_p1));
assign tmp_25_cast1_fu_682_p1 = window_val_2_1_0_1_load_reg_1544;
assign tmp_25_cast_fu_743_p1 = window_val_2_1_0_1_load_reg_1544;
assign tmp_25_fu_1113_p3 = ((abscond_1_fu_1108_p2[0:0] === 1'b1) ? dy_1_reg_1695 : neg_1_fu_1103_p2);
assign tmp_26_cast9_fu_746_p1 = reg_429;
assign tmp_26_cast_fu_685_p1 = reg_429;
assign tmp_26_fu_1134_p3 = ((abscond1_1_fu_1129_p2[0:0] === 1'b1) ? dx_1_reg_1688 : neg1_1_fu_1124_p2);
assign tmp_27_cast_fu_695_p1 = $signed(tmp_12_fu_689_p2);
assign tmp_27_fu_1298_p4 = {{p_neg_fu_1292_p2[ap_const_lv32_9 : ap_const_lv32_2]}};
assign tmp_28_1_cast_fu_854_p1 = window_val_0_1_1_1_load_reg_1519;
assign tmp_28_2_cast_fu_990_p1 = window_val_0_1_2_1_load_reg_1524;
assign tmp_28_fu_1308_p2 = (ap_const_lv8_0 - tmp_27_fu_1298_p4);
assign tmp_29_1_cast_fu_857_p1 = window_val_0_2_1_reg_1661;
assign tmp_29_2_cast_fu_993_p1 = line_buffers_val_1_q1;
assign tmp_29_fu_1314_p4 = {{tmp_15_fu_1278_p2[ap_const_lv32_9 : ap_const_lv32_2]}};
assign tmp_30_fu_1324_p3 = ((tmp_32_fu_1284_p3[0:0] === 1'b1) ? tmp_28_fu_1308_p2 : tmp_29_fu_1314_p4);
assign tmp_31_1_cast_fu_867_p1 = tmp_31_1_fu_860_p3;
assign tmp_31_1_fu_860_p3 = {{window_val_1_1_1_1_load_reg_1534}, {ap_const_lv1_0}};
assign tmp_31_2_cast_fu_1004_p1 = tmp_31_2_fu_997_p3;
assign tmp_31_2_fu_997_p3 = {{window_val_1_1_2_1_load_reg_1539}, {ap_const_lv1_0}};
assign tmp_31_cast_fu_618_p1 = $signed(tmp_5_fu_612_p2);
assign tmp_31_fu_1244_p3 = {{tmp_24_reg_1683}, {ap_const_lv1_0}};
assign tmp_32_cast5_fu_646_p1 = $signed(tmp_8_fu_641_p2);
assign tmp_32_cast_fu_769_p1 = tmp_17_fu_761_p3;
assign tmp_32_fu_1284_p3 = tmp_15_fu_1278_p2[ap_const_lv32_D];
assign tmp_33_1_cast_fu_878_p1 = tmp_33_1_fu_871_p3;
assign tmp_33_1_fu_871_p3 = {{window_val_1_2_1_reg_1667}, {ap_const_lv1_0}};
assign tmp_33_2_cast_fu_1016_p1 = tmp_33_2_fu_1008_p3;
assign tmp_33_2_fu_1008_p3 = {{line_buffers_val_2_q1}, {ap_const_lv1_0}};
assign tmp_33_fu_1332_p4 = {{tmp_15_fu_1278_p2[ap_const_lv32_D : ap_const_lv32_A]}};
assign tmp_34_1_cast8_fu_882_p1 = window_val_2_1_1_1_load_reg_1550;
assign tmp_34_1_cast_fu_885_p1 = window_val_2_1_1_1_load_reg_1550;
assign tmp_34_2_cast6_fu_1020_p1 = window_val_2_1_2_1_load_reg_1556;
assign tmp_34_2_cast_fu_1141_p1 = window_val_2_1_2_1_load_reg_1556;
assign tmp_34_cast_fu_781_p1 = tmp_19_fu_773_p3;
assign tmp_35_1_cast7_fu_888_p1 = window_val_2_2_1_reg_1653;
assign tmp_35_1_cast_fu_891_p1 = window_val_2_2_1_reg_1653;
assign tmp_35_2_cast5_fu_1144_p1 = reg_429;
assign tmp_35_2_cast_fu_1023_p1 = src_TDATA;
assign tmp_35_cast_fu_717_p1 = tmp_20_fu_711_p2;
assign tmp_36_1_cast_fu_900_p1 = $signed(tmp_36_1_fu_894_p2);
assign tmp_36_1_fu_894_p2 = (tmp_29_1_cast_fu_857_p1 - tmp_28_1_cast_fu_854_p1);
assign tmp_36_2_cast_fu_1033_p1 = $signed(tmp_36_2_fu_1027_p2);
assign tmp_36_2_fu_1027_p2 = (tmp_29_2_cast_fu_993_p1 - tmp_28_2_cast_fu_990_p1);
assign tmp_37_1_fu_904_p2 = ($signed(tmp_36_1_cast_fu_900_p1) - $signed(tmp_31_1_cast_fu_867_p1));
assign tmp_37_2_fu_1037_p2 = ($signed(tmp_36_2_cast_fu_1033_p1) - $signed(tmp_31_2_cast_fu_1004_p1));
assign tmp_37_cast_fu_785_p1 = $signed(tmp_22_reg_1648);
assign tmp_38_1_fu_910_p2 = (tmp_33_1_cast_fu_878_p1 + tmp_37_1_fu_904_p2);
assign tmp_38_2_fu_1043_p2 = (tmp_33_2_cast_fu_1016_p1 + tmp_37_2_fu_1037_p2);
assign tmp_39_1_fu_916_p2 = (tmp_38_1_fu_910_p2 - tmp_34_1_cast_fu_885_p1);
assign tmp_39_2_fu_1148_p2 = (tmp_38_2_reg_1702 - tmp_34_2_cast_fu_1141_p1);
assign tmp_3_fu_602_p1 = col_assign_mid2_fu_573_p3;
assign tmp_41_1_cast_fu_936_p1 = tmp_41_1_fu_928_p3;
assign tmp_41_1_fu_928_p3 = {{window_val_0_1_1_fu_156}, {ap_const_lv1_0}};
assign tmp_41_2_cast_fu_1166_p1 = tmp_41_2_fu_1159_p3;
assign tmp_41_2_fu_1159_p3 = {{window_val_0_1_2_load_reg_1673}, {ap_const_lv1_0}};
assign tmp_43_1_cast_fu_948_p1 = tmp_43_1_fu_940_p3;
assign tmp_43_1_fu_940_p3 = {{window_val_2_1_1_fu_204}, {ap_const_lv1_0}};
assign tmp_43_2_cast_fu_1177_p1 = tmp_43_2_fu_1170_p3;
assign tmp_43_2_fu_1170_p3 = {{window_val_2_1_2_load_reg_1678}, {ap_const_lv1_0}};
assign tmp_44_1_cast_fu_958_p1 = tmp_44_1_fu_952_p2;
assign tmp_44_1_fu_952_p2 = (tmp_28_1_cast_fu_854_p1 + tmp_29_1_cast_fu_857_p1);
assign tmp_44_2_cast_fu_1055_p1 = tmp_44_2_fu_1049_p2;
assign tmp_44_2_fu_1049_p2 = (tmp_28_2_cast_fu_990_p1 + tmp_29_2_cast_fu_993_p1);
assign tmp_45_1_fu_962_p2 = (tmp_44_1_cast_fu_958_p1 - tmp_34_1_cast8_fu_882_p1);
assign tmp_45_2_fu_1059_p2 = (tmp_44_2_cast_fu_1055_p1 - tmp_34_2_cast6_fu_1020_p1);
assign tmp_46_1_cast_fu_974_p1 = $signed(tmp_46_1_fu_968_p2);
assign tmp_46_1_fu_968_p2 = (tmp_45_1_fu_962_p2 - tmp_35_1_cast_fu_891_p1);
assign tmp_46_2_cast_fu_1181_p1 = $signed(tmp_46_2_reg_1707);
assign tmp_46_2_fu_1065_p2 = (tmp_45_2_fu_1059_p2 - tmp_35_2_cast_fu_1023_p1);
assign tmp_47_1_fu_978_p2 = ($signed(tmp_41_1_cast_fu_936_p1) + $signed(tmp_46_1_cast_fu_974_p1));
assign tmp_47_2_fu_1184_p2 = ($signed(tmp_41_2_cast_fu_1166_p1) + $signed(tmp_46_2_cast_fu_1181_p1));
assign tmp_4_fu_459_p2 = ($signed(tmp_1_cast_reg_1377) + $signed(ap_const_lv17_1FFFF));
assign tmp_5_fu_612_p2 = (ap_const_lv14_780 + tmp_fu_608_p1);
assign tmp_7_fu_442_p2 = (tmp_6_reg_362 + ap_const_lv2_1);
assign tmp_8_fu_641_p2 = (ap_const_lv14_F00 + tmp_reg_1581);
assign tmp_9_fu_448_p2 = (tmp_6_reg_362 == ap_const_lv2_2? 1'b1: 1'b0);
assign tmp_cast_fu_434_p1 = height;
assign tmp_fu_608_p1 = col_assign_mid2_fu_573_p3[13:0];
assign tmp_s_fu_454_p2 = ($signed(tmp_cast_reg_1372) + $signed(ap_const_lv17_1FFFF));
assign val_assign_2_fu_629_p2 = (tmp_1_fu_593_p2 & tmp_18_fu_624_p2);
always @ (posedge ap_clk) begin
    tmp_cast_reg_1372[16] <= 1'b0;
    tmp_1_cast_reg_1377[16] <= 1'b0;
    tmp_3_reg_1576[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end



endmodule //my_video_filter

